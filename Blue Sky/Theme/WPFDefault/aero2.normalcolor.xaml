<!--
    =================================================================
    Copyright (C) Microsoft Corporation.  All rights reserved.
    
    Theme Styles For Windows Presentation Foundation Version
    ==================================================================
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    xmlns:ui="clr-namespace:System.Windows.Documents;assembly=PresentationUI">


    <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="#FFE5E5E5" />
    </Style>

    <SolidColorBrush
        x:Key="BSkyBG"
        x:Name="BSkyBG"
        Color="#FFE5E5E5" />

    <Style TargetType="Calendar">
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#FFE4EAF0" />
                    <GradientStop Offset="0.16" Color="#FFECF0F4" />
                    <GradientStop Offset="0.16" Color="#FFFCFCFD" />
                    <GradientStop Offset="1" Color="#FFFFFFFF" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#FFA3AEB9" />
                    <GradientStop Offset="0.375" Color="#FF8399A9" />
                    <GradientStop Offset="0.375" Color="#FF718597" />
                    <GradientStop Offset="1" Color="#FF617584" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Calendar">
                    <StackPanel Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem
                            Name="PART_CalendarItem"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Style="{TemplateBinding CalendarItemStyle}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CalendarItem">
        <Setter Property="Margin" Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarItem">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock
                                Margin="0,6,0,6"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="Verdana"
                                FontSize="9.5"
                                FontWeight="Bold"
                                Foreground="#FF333333"
                                Text="{Binding}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="1">
                            <Border
                                BorderBrush="#FFFFFFFF"
                                BorderThickness="2"
                                CornerRadius="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.Resources>
                                        <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="Button">
                                            <Grid Cursor="Hand">
                                                <Rectangle
                                                    Fill="#11E5EBF1"
                                                    Opacity="1"
                                                    Stretch="Fill" />
                                                <Grid>
                                                    <Path
                                                        x:Name="path"
                                                        Width="6"
                                                        Height="10"
                                                        Margin="14,-6,0,0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                                        Stretch="Fill">
                                                        <Path.Fill>
                                                            <SolidColorBrush Color="#FF333333" />
                                                        </Path.Fill>
                                                    </Path>
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup Name="CommonStates">
                                                        <VisualState Name="Normal" />
                                                        <VisualState Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                    To="#FF73A9D8"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)"
                                                                    To=".5"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>


                                        <ControlTemplate x:Key="NextButtonTemplate" TargetType="Button">
                                            <Grid Cursor="Hand">
                                                <Rectangle
                                                    Fill="#11E5EBF1"
                                                    Opacity="1"
                                                    Stretch="Fill" />
                                                <Grid>
                                                    <Path
                                                        x:Name="path"
                                                        Width="6"
                                                        Height="10"
                                                        Margin="0,-6,14,0"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Center"
                                                        Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                                        Stretch="Fill">
                                                        <Path.Fill>
                                                            <SolidColorBrush Color="#FF333333" />
                                                        </Path.Fill>
                                                    </Path>
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup Name="CommonStates">
                                                        <VisualState Name="Normal" />
                                                        <VisualState Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                    To="#FF73A9D8"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)"
                                                                    To=".5"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>


                                        <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="Button">
                                            <Grid Cursor="Hand">
                                                <ContentPresenter
                                                    x:Name="buttonContent"
                                                    Margin="1,4,1,9"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}">
                                                    <TextElement.Foreground>
                                                        <SolidColorBrush Color="#FF333333" />
                                                    </TextElement.Foreground>
                                                </ContentPresenter>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup Name="CommonStates">
                                                        <VisualState Name="Normal" />
                                                        <VisualState Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Storyboard.TargetName="buttonContent"
                                                                    Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                    To="#FF73A9D8"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="buttonContent"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    To=".5"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>

                                    </Grid.Resources>

                                    <Button
                                        x:Name="PART_PreviousButton"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Width="28"
                                        Height="20"
                                        HorizontalAlignment="Left"
                                        Focusable="False"
                                        Template="{StaticResource PreviousButtonTemplate}" />

                                    <Button
                                        x:Name="PART_HeaderButton"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Focusable="False"
                                        FontSize="10.5"
                                        FontWeight="Bold"
                                        Template="{StaticResource HeaderButtonTemplate}" />

                                    <Button
                                        x:Name="PART_NextButton"
                                        Grid.Row="0"
                                        Grid.Column="2"
                                        Width="28"
                                        Height="20"
                                        HorizontalAlignment="Right"
                                        Focusable="False"
                                        Template="{StaticResource NextButtonTemplate}" />

                                    <Grid
                                        x:Name="PART_MonthView"
                                        Grid.Row="1"
                                        Grid.ColumnSpan="3"
                                        Margin="6,-1,6,6"
                                        HorizontalAlignment="Center"
                                        Visibility="Visible">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                    </Grid>

                                    <Grid
                                        x:Name="PART_YearView"
                                        Grid.Row="1"
                                        Grid.ColumnSpan="3"
                                        Margin="6,-3,7,6"
                                        HorizontalAlignment="Center"
                                        Visibility="Hidden">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle
                            x:Name="PART_DisabledVisual"
                            Fill="{StaticResource DisabledColor}"
                            Opacity="0"
                            RadiusX="2"
                            RadiusY="2"
                            Stretch="Fill"
                            Stroke="{StaticResource DisabledColor}"
                            StrokeThickness="1"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_DisabledVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Value="Year">
                            <DataTrigger.Binding>
                                <Binding Path="DisplayMode">
                                    <Binding.RelativeSource>
                                        <RelativeSource AncestorType="{x:Type Calendar}" Mode="FindAncestor" />
                                    </Binding.RelativeSource>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Value="Decade">
                            <DataTrigger.Binding>
                                <Binding Path="DisplayMode">
                                    <Binding.RelativeSource>
                                        <RelativeSource AncestorType="{x:Type Calendar}" Mode="FindAncestor" />
                                    </Binding.RelativeSource>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CalendarDayButton">
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">
                    <Grid>
                        <Rectangle
                            x:Name="TodayBackground"
                            Fill="#FFAAAAAA"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1" />
                        <Rectangle
                            x:Name="SelectedBackground"
                            Fill="#FFBADDE9"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1" />
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle
                            x:Name="HighlightBackground"
                            Fill="#FFBADDE9"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1" />
                        <ContentPresenter
                            x:Name="NormalText"
                            Margin="5,1,5,1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextElement.Foreground>
                                <SolidColorBrush Color="#FF333333" />
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <Path
                            x:Name="Blackout"
                            Margin="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                            Fill="#FF000000"
                            Opacity="0"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill" />
                        <Rectangle
                            x:Name="DayButtonFocusVisual"
                            IsHitTestVisible="false"
                            RadiusX="1"
                            RadiusY="1"
                            Stroke="#FF45D6FA"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".35"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unselected" />
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".75"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DayButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DayButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active" />
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="#FF777777"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="RegularDay" />
                                <VisualState Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="TodayBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ColorAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="#FFFFFFFF"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="NormalDay" />
                                <VisualState Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Blackout"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".2"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CalendarButton">
        <Setter Property="Background" Value="#FFBADDE9" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarButton">
                    <Grid>
                        <Rectangle
                            x:Name="SelectedBackground"
                            Fill="{TemplateBinding Background}"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1" />
                        <Rectangle
                            x:Name="Background"
                            Fill="{TemplateBinding Background}"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1" />
                        <ContentPresenter
                            x:Name="NormalText"
                            Margin="1,0,1,1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextElement.Foreground>
                                <SolidColorBrush Color="#FF333333" />
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <Rectangle
                            x:Name="CalendarButtonFocusVisual"
                            IsHitTestVisible="false"
                            RadiusX="1"
                            RadiusY="1"
                            Stroke="#FF45D6FA"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unselected" />
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".75"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active" />
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="#FF777777"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="CalendarButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="CalendarButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="CalendarButtonFocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate DataType="{x:Type CollectionViewGroup}">
        <ContentPresenter Content="{Binding Path=Name}" ContentStringFormat="{TemplateBinding ContentStringFormat}" />
    </DataTemplate>


    <Style x:Key="{x:Type ContentControl}" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="#F5F5F5" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#FF959595" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <theme:SystemDropShadowChrome
                        Name="Shdw"
                        SnapsToDevicePixels="true"
                        Color="Transparent">
                        <Border
                            Name="ContextMenuBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer
                                Name="ContextMenuScrollViewer"
                                Grid.ColumnSpan="2"
                                Margin="1,0"
                                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},
                                                                              ResourceId=MenuScrollViewer}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                        <Rectangle
                                            Name="OpaqueRect"
                                            Width="{Binding ElementName=ContextMenuBorder, Path=ActualWidth}"
                                            Height="{Binding ElementName=ContextMenuBorder, Path=ActualHeight}"
                                            Fill="{Binding ElementName=ContextMenuBorder, Path=Background}" />
                                    </Canvas>
                                    <Rectangle
                                        Width="28"
                                        Margin="1,2"
                                        HorizontalAlignment="Left"
                                        Fill="#F1F1F1"
                                        RadiusX="2"
                                        RadiusY="2" />
                                    <Rectangle
                                        Width="1"
                                        Margin="29,2,0,2"
                                        HorizontalAlignment="Left"
                                        Fill="#E2E3E3" />
                                    <Rectangle
                                        Width="1"
                                        Margin="30,2,0,2"
                                        HorizontalAlignment="Left"
                                        Fill="White" />
                                    <ItemsPresenter
                                        Name="ItemsPresenter"
                                        Margin="{TemplateBinding Padding}"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger SourceName="ContextMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=ContextMenuScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=ContextMenuScrollViewer, Path=HorizontalOffset}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
        <Setter Property="TextAlignment" Value="Justify" />
        <Setter Property="FontFamily" Value="Georgia" />
        <Setter Property="FontSize" Value="16.0" />
    </Style>
    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
    </Style>
    <Style x:Key="{x:Type Bold}" TargetType="{x:Type Bold}">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <Style x:Key="{x:Type Italic}" TargetType="{x:Type Italic}">
        <Setter Property="FontStyle" Value="Italic" />
    </Style>
    <Style x:Key="{x:Type Underline}" TargetType="{x:Type Underline}">
        <Setter Property="TextDecorations" Value="Underline" />
    </Style>
    <Style x:Key="{x:Type Paragraph}" TargetType="{x:Type Paragraph}">
        <Setter Property="Margin" Value="Auto" />
    </Style>
    <Style x:Key="{x:Type List}" TargetType="{x:Type List}">
        <Setter Property="Margin" Value="Auto" />
        <Setter Property="Padding" Value="Auto" />
    </Style>
    <Style x:Key="{x:Type Floater}" TargetType="{x:Type Floater}">
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <DataTemplate DataType="{x:Type FlowDocument}">
        <FlowDocumentReader Document="{Binding}" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type FixedDocument}">
        <DocumentViewer Document="{Binding}" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type FixedDocumentSequence}">
        <DocumentViewer Document="{Binding}" />
    </DataTemplate>
    <LinearGradientBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=DocumentViewerToolBarGradient}" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="{x:Static SystemColors.InactiveCaptionTextColor}" />
            <GradientStop Offset="1" Color="{x:Static SystemColors.InactiveCaptionColor}" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DocumentViewerToolBarDividerGradient" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="1" Color="{x:Static SystemColors.InactiveCaptionTextColor}" />
            <GradientStop Offset="0" Color="{x:Static SystemColors.InactiveCaptionColor}" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style
        x:Key="{x:Type DocumentViewer}"
        BasedOn="{x:Null}"
        TargetType="{x:Type DocumentViewer}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContextMenu" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ui:PresentationUIStyleResources}, ResourceId=PUIDocumentViewerContextMenu}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DocumentViewer}">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Focusable="False">
                        <Grid Background="{TemplateBinding Background}" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ContentControl
                                Grid.Row="0"
                                Grid.Column="0"
                                Focusable="{TemplateBinding Focusable}"
                                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ui:PresentationUIStyleResources},
                                                                              ResourceId=PUIDocumentViewerToolBarStyleKey}}"
                                TabIndex="0" />
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Row="1"
                                Grid.Column="0"
                                CanContentScroll="true"
                                Focusable="{TemplateBinding Focusable}"
                                HorizontalScrollBarVisibility="Auto"
                                IsTabStop="true"
                                TabIndex="1" />
                            <DockPanel Grid.Row="1">
                                <FrameworkElement Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" DockPanel.Dock="Right" />
                                <Rectangle
                                    Height="10"
                                    VerticalAlignment="top"
                                    Visibility="Visible">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Offset="0" Color="#66000000" />
                                                    <GradientStop Offset="1" Color="Transparent" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </DockPanel>
                            <ContentControl
                                x:Name="PART_FindToolBarHost"
                                Grid.Row="2"
                                Grid.Column="0"
                                Focusable="{TemplateBinding Focusable}"
                                TabIndex="2" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid}, ResourceId=DataGridSelectAllButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle
                            x:Name="Border"
                            Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                            SnapsToDevicePixels="True" />
                        <Polygon
                            x:Name="Arrow"
                            Margin="8,8,3,3"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Fill="Black"
                            Opacity="0.15"
                            Points="0,10 10,10 10,0"
                            Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="#FF688CAF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Button
                                            Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}"
                                            Command="{x:Static DataGrid.SelectAllCommand}"
                                            Focusable="false"
                                            Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid},
                                                                                          ResourceId=DataGridSelectAllButtonStyle}}"
                                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />
                                        <DataGridColumnHeadersPresenter
                                            Name="PART_ColumnHeadersPresenter"
                                            Grid.Column="1"
                                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />

                                        <ScrollContentPresenter
                                            x:Name="PART_ScrollContentPresenter"
                                            Grid.Row="1"
                                            Grid.ColumnSpan="2"
                                            CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar
                                            Name="PART_VerticalScrollBar"
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            Orientation="Vertical"
                                            ViewportSize="{TemplateBinding ViewportHeight}"
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                            Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />

                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar
                                                Name="PART_HorizontalScrollBar"
                                                Grid.Column="1"
                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                Orientation="Horizontal"
                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />

                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type DataGridColumnHeadersPresenter}" TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid>
                        <DataGridColumnHeader Name="PART_FillerColumnHeader" IsHitTestVisible="False" />
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static DataGridColumnHeader.ColumnFloatingHeaderStyleKey}" TargetType="{x:Type Control}">
        <Setter Property="Opacity" Value="0.6" />
        <Setter Property="BorderBrush" Value="#FF688CAF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Canvas Name="PART_VisualBrushCanvas" Margin="{TemplateBinding Margin}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="#FF000080" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock
                        Margin="2,0,0,0"
                        VerticalAlignment="Center"
                        Foreground="Red"
                        Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border
                        x:Name="DGR_Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <DataGridCellsPresenter
                                Grid.Column="1"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <DataGridDetailsPresenter
                                Grid.Row="1"
                                Grid.Column="1"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                Visibility="{TemplateBinding DetailsVisibility}" />

                            <DataGridRowHeader
                                Grid.RowSpan="2"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsNewItem" Value="True">
                <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NewItemMargin}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type DataGridCellsPresenter}" TargetType="{x:Type DataGridCellsPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000" />

    <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static DataGridComboBoxColumn.TextBlockComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ContentPresenter
                        Margin="1,1,1,1"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        IsHitTestVisible="false"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <theme:DataGridHeaderBorder
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            IsClickable="{TemplateBinding CanUserSort}"
                            IsHovered="{TemplateBinding IsMouseOver}"
                            IsPressed="{TemplateBinding IsPressed}"
                            SeparatorBrush="{TemplateBinding SeparatorBrush}"
                            SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                            SortDirection="{TemplateBinding SortDirection}">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </theme:DataGridHeaderBorder>

                        <Thumb
                            x:Name="PART_LeftHeaderGripper"
                            HorizontalAlignment="Left"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            HorizontalAlignment="Right"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type DataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <theme:DataGridHeaderBorder
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            IsHovered="{TemplateBinding IsMouseOver}"
                            IsPressed="{TemplateBinding IsPressed}"
                            IsSelected="{TemplateBinding IsRowSelected}"
                            Orientation="Horizontal"
                            SeparatorBrush="{TemplateBinding SeparatorBrush}"
                            SeparatorVisibility="{TemplateBinding SeparatorVisibility}">

                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Control
                                    SnapsToDevicePixels="false"
                                    Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=ValidationErrorTemplate}"
                                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=(Validation.HasError), Converter={StaticResource bool2VisibilityConverter}}" />
                            </StackPanel>
                        </theme:DataGridHeaderBorder>
                        <Thumb
                            x:Name="PART_TopHeaderGripper"
                            VerticalAlignment="Top"
                            Style="{StaticResource RowHeaderGripperStyle}" />
                        <Thumb
                            x:Name="PART_BottomHeaderGripper"
                            VerticalAlignment="Bottom"
                            Style="{StaticResource RowHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint=".5,1" EndPoint=".5,0">
                    <GradientStop Offset="0" Color="#FFA3AEB9" />
                    <GradientStop Offset="0.375" Color="#FF8399A9" />
                    <GradientStop Offset="0.375" Color="#FF718597" />
                    <GradientStop Offset="1" Color="#FF617584" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Child>
                            <Grid
                                x:Name="PART_Root"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />

                                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="Button">
                                        <Grid>
                                            <Grid
                                                Width="19"
                                                Height="18"
                                                Margin="0"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Background="#11FFFFFF"
                                                FlowDirection="LeftToRight">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="23*" />
                                                    <RowDefinition Height="19*" />
                                                    <RowDefinition Height="19*" />
                                                    <RowDefinition Height="19*" />
                                                </Grid.RowDefinitions>
                                                <Border
                                                    x:Name="Highlight"
                                                    Grid.Row="0"
                                                    Grid.RowSpan="4"
                                                    Grid.ColumnSpan="4"
                                                    Margin="-1"
                                                    BorderBrush="#FF45D6FA"
                                                    BorderThickness="1"
                                                    CornerRadius="0,0,1,1"
                                                    Opacity="0" />
                                                <Border
                                                    x:Name="Background"
                                                    Grid.Row="1"
                                                    Grid.RowSpan="3"
                                                    Grid.ColumnSpan="4"
                                                    Margin="0,-1,0,0"
                                                    Background="#FF1F3B53"
                                                    BorderBrush="#FFFFFFFF"
                                                    BorderThickness="1"
                                                    CornerRadius=".5"
                                                    Opacity="1" />
                                                <Border
                                                    x:Name="BackgroundGradient"
                                                    Grid.Row="1"
                                                    Grid.RowSpan="3"
                                                    Grid.ColumnSpan="4"
                                                    Margin="0,-1,0,0"
                                                    BorderBrush="#BF000000"
                                                    BorderThickness="1"
                                                    CornerRadius=".5"
                                                    Opacity="1">
                                                    <Border.Background>
                                                        <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                                            <GradientStop Offset="0" Color="#FFFFFFFF" />
                                                            <GradientStop Offset="0.375" Color="#F9FFFFFF" />
                                                            <GradientStop Offset="0.625" Color="#E5FFFFFF" />
                                                            <GradientStop Offset="1" Color="#C6FFFFFF" />
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                </Border>
                                                <Rectangle
                                                    Grid.RowSpan="1"
                                                    Grid.ColumnSpan="4"
                                                    StrokeThickness="1">
                                                    <Rectangle.Stroke>
                                                        <LinearGradientBrush StartPoint="0.48,1.25" EndPoint="0.48,-1">
                                                            <GradientStop Color="#FF494949" />
                                                            <GradientStop Offset="1" Color="#FF9F9F9F" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Stroke>
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush StartPoint="0.46,1.6" EndPoint="0.3,-1.1">
                                                            <GradientStop Color="#FF4084BD" />
                                                            <GradientStop Offset="1" Color="#FFAFCFEA" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Path
                                                    Grid.Row="1"
                                                    Grid.RowSpan="3"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="4"
                                                    Margin="4,3,4,3"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                                    Fill="#FF2F2F2F"
                                                    RenderTransformOrigin="0.5,0.5"
                                                    Stretch="Fill" />
                                                <Ellipse
                                                    Grid.ColumnSpan="4"
                                                    Width="3"
                                                    Height="3"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Fill="#FFFFFFFF"
                                                    StrokeThickness="0" />
                                                <Border
                                                    x:Name="DisabledVisual"
                                                    Grid.Row="0"
                                                    Grid.RowSpan="4"
                                                    Grid.ColumnSpan="4"
                                                    BorderBrush="#B2FFFFFF"
                                                    BorderThickness="1"
                                                    CornerRadius="0,0,.5,.5"
                                                    Opacity="0" />
                                            </Grid>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0" />
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState Name="Normal" />
                                                    <VisualState Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimation
                                                                Storyboard.TargetName="Background"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                To="#FF448DCA"
                                                                Duration="0" />
                                                            <ColorAnimationUsingKeyFrames
                                                                BeginTime="0"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                                                Duration="00:00:00.001">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames
                                                                BeginTime="0"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                                Duration="00:00:00.001">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames
                                                                BeginTime="0"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                Duration="00:00:00.001">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState Name="Pressed">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames
                                                                BeginTime="0"
                                                                Storyboard.TargetName="Background"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                Duration="00:00:00.001">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames
                                                                BeginTime="0"
                                                                Storyboard.TargetName="Highlight"
                                                                Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                Duration="00:00:00.001">
                                                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames
                                                                BeginTime="0"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                Duration="00:00:00.001">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames
                                                                BeginTime="0"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                                Duration="00:00:00.001">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames
                                                                BeginTime="0"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                                                Duration="00:00:00.001">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames
                                                                BeginTime="0"
                                                                Storyboard.TargetName="BackgroundGradient"
                                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                                Duration="00:00:00.001">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState Name="Disabled" />
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button
                                    x:Name="PART_Button"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Width="20"
                                    Margin="3,0,3,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Focusable="False"
                                    Foreground="{TemplateBinding Foreground}"
                                    Template="{StaticResource DropDownButtonTemplate}" />
                                <DatePickerTextBox
                                    x:Name="PART_TextBox"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Focusable="{TemplateBinding Focusable}" />
                                <Grid
                                    x:Name="PART_DisabledVisual"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    IsHitTestVisible="False"
                                    Opacity="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Fill="#A5FFFFFF"
                                        RadiusX="1"
                                        RadiusY="1" />
                                    <Rectangle
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Width="19"
                                        Height="18"
                                        Margin="3,0,3,0"
                                        Fill="#A5FFFFFF"
                                        RadiusX="1"
                                        RadiusY="1" />
                                    <Popup
                                        x:Name="PART_Popup"
                                        AllowsTransparency="True"
                                        Placement="Bottom"
                                        PlacementTarget="{Binding ElementName=PART_TextBox}"
                                        StaysOpen="False" />
                                </Grid>
                            </Grid>
                        </Border.Child>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_DisabledVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                            <Setter TargetName="PART_TextBox" Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePickerTextBox">
                    <Grid>
                        <Grid.Resources>
                            <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA" />
                        </Grid.Resources>


                        <Border
                            x:Name="Border"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="1"
                            Opacity="1">
                            <Grid
                                x:Name="WatermarkContent"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Border x:Name="ContentElement" BorderThickness="1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="#FFFFFFFF" />
                                    </Border.BorderBrush>
                                </Border>
                                <Border x:Name="watermark_decorator" BorderThickness="1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="#FFFFFFFF" />
                                    </Border.BorderBrush>
                                    <ContentControl
                                        x:Name="PART_Watermark"
                                        Padding="2"
                                        Focusable="False"
                                        IsHitTestVisible="False"
                                        Opacity="0" />
                                </Border>
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    Margin="0"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <Border
                                    x:Name="FocusVisual"
                                    BorderBrush="#FF45D6FA"
                                    CornerRadius="1"
                                    IsHitTestVisible="False"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="ContentElement"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="#FF99C1E2"
                                            Duration="0" />
                                        <ColorAnimation
                                            Storyboard.TargetName="watermark_decorator"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="#FF99C1E2"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="WatermarkStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unwatermarked" />
                                <VisualState Name="Watermarked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_Watermark"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unfocused" />
                                <VisualState Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333" />
    <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333" />
    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF" />
    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF" />
    <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000" />
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD" />
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF" />
    <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000" />
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC" />
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070" />


    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="0"
                            SnapsToDevicePixels="true"
                            Stroke="Black"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Ellipse
                                x:Name="circle"
                                Width="19"
                                Height="19"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{StaticResource Expander.Static.Circle.Fill}"
                                Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                            <Path
                                x:Name="arrow"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                SnapsToDevicePixels="false"
                                Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                StrokeThickness="2" />
                            <ContentPresenter
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource Expander.Static.Circle.Fill}"
                                    Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                    StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource Expander.Static.Circle.Fill}"
                                    Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                    StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource Expander.Static.Circle.Fill}"
                                    Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                    StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton
                                x:Name="HeaderSite"
                                MinWidth="0"
                                MinHeight="0"
                                Margin="1"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ExpanderDownHeaderStyle}" />
                            <ContentPresenter
                                x:Name="ExpandSite"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                DockPanel.Dock="Bottom"
                                Focusable="false"
                                Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type GridSplitter}" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
    <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.Column="0"
                            Grid.ColumnSpan="4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4" />

                        <Border
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.ColumnSpan="4"
                            BorderBrush="White"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding ElementName="Header" Path="ActualWidth" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>

                            <Border
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                                <Border
                                    BorderBrush="White"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2" />
                            </Border>
                        </Border>

                        <Border
                            x:Name="Header"
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            Padding="3,1,3,0">
                            <ContentPresenter
                                ContentSource="Header"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter
                            Grid.Row="2"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="{x:Type GroupItem}" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <StackPanel>
                        <ContentPresenter x:Name="PART_Header" />
                        <ItemsPresenter x:Name="ItemsPresenter" Margin="5,0,0,0" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type HeaderedContentControl}" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <StackPanel>
                        <ContentPresenter ContentSource="Header" />
                        <ContentPresenter />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
        <Setter Property="TextDecorations" Value="Underline" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type ItemsControl}" TargetType="{x:Type ItemsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ListBorder" Color="#828790" />


    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3" />
    <SolidColorBrush x:Key="ListBox.MouseOver.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9" />

    <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        Name="Bd"
                        Padding="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <SolidColorBrush x:Key="Item.Static.Background" Color="#FFFCFCFC" />
    <SolidColorBrush x:Key="Item.Static.Border" Color="#FFFCFCFC" />
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA" />
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da" />
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA" />
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA" />

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer
                                DockPanel.Dock="Top"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter
                                    Margin="2,0,2,0"
                                    AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderStringFormat="{Binding Path=TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                    Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                            <ScrollContentPresenter
                                Name="PART_ScrollContentPresenter"
                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                KeyboardNavigation.DirectionalNavigation="Local"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </DockPanel>
                        <ScrollBar
                            Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0.0"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        <ScrollBar
                            Name="PART_VerticalScrollBar"
                            Grid.Column="1"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0.0"
                            Orientation="Vertical"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        <DockPanel
                            Grid.Row="1"
                            Grid.Column="1"
                            Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}"
                            LastChildFill="false">
                            <Rectangle
                                Width="1"
                                DockPanel.Dock="Left"
                                Fill="White"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <Rectangle
                                Height="1"
                                DockPanel.Dock="Top"
                                Fill="White"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="GridViewColumnHeaderBorderBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFF2F2F2" />
            <GradientStop Offset="1" Color="#FFD5D5D5" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridViewColumnHeaderBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFFFFFFF" />
            <GradientStop Offset="0.4091" Color="#FFFFFFFF" />
            <GradientStop Offset="1" Color="#FFF7F8F9" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridViewColumnHeaderHoverBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFBDEDFF" />
            <GradientStop Offset="1" Color="#FFB7E7FB" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GridViewColumnHeaderPressBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FF8DD6F7" />
            <GradientStop Offset="1" Color="#FF8AD1F5" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right" Value="-9" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{StaticResource GridViewColumnHeaderBorderBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle
                            Width="1"
                            HorizontalAlignment="Center"
                            Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource GridViewColumnHeaderBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource GridViewColumnHeaderBorderBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="true">
                        <Border
                            Name="HeaderBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0,1,0,1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="7" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Rectangle
                                    Name="UpperHighlight"
                                    Fill="#FFE3F7FF"
                                    Visibility="Collapsed" />
                                <Border Grid.RowSpan="2" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter
                                        Name="HeaderContent"
                                        Margin="0,0,0,1"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </Border>
                        <Border
                            Name="HeaderHoverBorder"
                            Margin="1,1,0,0"
                            BorderThickness="1,0,1,1" />
                        <Border
                            Name="HeaderPressBorder"
                            Margin="1,0,0,1"
                            BorderThickness="1,1,1,0" />
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource GridViewColumnHeaderHoverBackground}" />
                            <Setter TargetName="HeaderHoverBorder" Property="BorderBrush" Value="#FF88CBEB" />
                            <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_HeaderGripper" Property="Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource GridViewColumnHeaderPressBackground}" />
                            <Setter TargetName="HeaderHoverBorder" Property="BorderBrush" Value="#FF95DAF9" />
                            <Setter TargetName="HeaderPressBorder" Property="BorderBrush" Value="#FF7A9EB1" />
                            <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
                            <Setter TargetName="UpperHighlight" Property="Fill" Value="#FFBCE4F9" />
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0" />
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.4082" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle
                                    Width="{TemplateBinding ActualWidth}"
                                    Height="{TemplateBinding ActualHeight}"
                                    Fill="#FF000000"
                                    Opacity="0.4697" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border
                                Name="HeaderBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,1,0,1" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height" Value="Auto">
                                    <Setter Property="MinHeight" Value="20" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Static GridView.GridViewStyleKey}" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#FF042271" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <theme:ListBoxChrome
                        Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </theme:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ListViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        RadiusX="2"
                        RadiusY="2"
                        Stroke="#8E6EA6F5"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ListItemHoverFill" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFF1FBFF" />
            <GradientStop Offset="1" Color="#FFD5F1FE" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedFill" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFD9F4FF" />
            <GradientStop Offset="1" Color="#FF9BDDFB" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedHoverFill" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFEAF9FF" />
            <GradientStop Offset="1" Color="#FFC9EDFD" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedInactiveFill" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFEEEDED" />
            <GradientStop Offset="1" Color="#FFDDDDDD" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="{x:Static GridView.GridViewItemContainerStyleKey}" TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="5,2,5,2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2"
                        SnapsToDevicePixels="true">
                        <Border
                            Name="InnerBorder"
                            BorderThickness="1"
                            CornerRadius="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Rectangle
                                    Name="UpperHighlight"
                                    Fill="#75FFFFFF"
                                    Visibility="Collapsed" />
                                <GridViewRowPresenter
                                    Grid.RowSpan="2"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource ListItemHoverFill}" />
                            <Setter Property="BorderBrush" Value="#FFCCF0FF" />
                            <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{StaticResource ListItemSelectedFill}" />
                            <Setter Property="BorderBrush" Value="#FF98DDFB" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF" />
                            <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
                            <Setter TargetName="UpperHighlight" Property="Fill" Value="#40FFFFFF" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ListItemSelectedInactiveFill}" />
                            <Setter Property="BorderBrush" Value="#FFCFCFCF" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ListItemSelectedHoverFill}" />
                            <Setter Property="BorderBrush" Value="#FF98DDFB" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999" />
    <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121" />

    <SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7" />

    <SolidColorBrush x:Key="Menu.Disabled.Background" Color="#3DDADADA" />
    <SolidColorBrush x:Key="Menu.Disabled.Border" Color="#FFDADADA" />
    <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070" />

    <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA" />
    <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA" />

    <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#3D26A0DA" />
    <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#FF26A0DA" />

    <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000" />
    <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000" />



    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource Menu.Static.Background}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>


    <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>



    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}" TargetType="{x:Type ContentControl}">
        <Border
            Padding="2"
            Background="{TemplateBinding Menu.Background}"
            BorderBrush="{TemplateBinding Menu.BorderBrush}"
            BorderThickness="1">
            <Border Background="{StaticResource Menu.Static.Background}">
                <ContentPresenter />
            </Border>
        </Border>
    </ControlTemplate>

    <Style
        x:Key="MenuScrollButton"
        BasedOn="{x:Null}"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        x:Name="templateRoot"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            Margin="6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},
                                     ResourceId=MenuScrollViewer}"
        BasedOn="{x:Null}"
        TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" />
                        </Border>
                        <RepeatButton
                            Grid.Row="0"
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="false"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="0"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}" Fill="{StaticResource Menu.Static.Foreground}" />
                        </RepeatButton>
                        <RepeatButton
                            Grid.Row="2"
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="false"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="100"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}" Fill="{StaticResource Menu.Static.Foreground}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{StaticResource Menu.Static.Separator}" />
        <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Separator}" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border
                        Margin="30,0,0,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path
                    x:Name="GlyphPanel"
                    Margin="3"
                    VerticalAlignment="Center"
                    Data="{StaticResource Checkmark}"
                    Fill="{StaticResource Menu.Static.Foreground}"
                    FlowDirection="LeftToRight"
                    Visibility="Collapsed" />
                <ContentPresenter
                    Grid.Column="1"
                    Margin="{TemplateBinding Padding}"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Background}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource Menu.Disabled.Foreground}" />
                <Setter TargetName="GlyphPanel" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Disabled.Background}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Disabled.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path
                    x:Name="GlyphPanel"
                    Margin="3"
                    VerticalAlignment="Center"
                    Data="{StaticResource Checkmark}"
                    Fill="{TemplateBinding Menu.Foreground}"
                    FlowDirection="LeftToRight"
                    Visibility="Collapsed" />
                <ContentPresenter
                    Grid.Column="1"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    Focusable="false"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PlacementTarget="{Binding ElementName=templateRoot}"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                    <Border
                        x:Name="SubMenuBorder"
                        Padding="2"
                        Background="{StaticResource Menu.Static.Background}"
                        BorderBrush="{StaticResource Menu.Static.Border}"
                        BorderThickness="1">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        Name="OpaqueRect"
                                        Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}"
                                        Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
                                        Fill="{Binding ElementName=SubMenuBorder, Path=Background}" />
                                </Canvas>
                                <Rectangle
                                    Width="1"
                                    Margin="29,2,0,2"
                                    HorizontalAlignment="Left"
                                    Fill="{StaticResource Menu.Static.Separator}" />
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    Grid.IsSharedSizeScope="true"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Background}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource Menu.Disabled.Foreground}" />
                <Setter TargetName="GlyphPanel" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot"
            Height="22"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        MinWidth="22"
                        SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border
                    x:Name="GlyphPanel"
                    Width="22"
                    Height="22"
                    Margin="-1,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{StaticResource MenuItem.Selected.Background}"
                    BorderBrush="{StaticResource MenuItem.Selected.Border}"
                    BorderThickness="1"
                    ClipToBounds="False"
                    Visibility="Hidden">
                    <Path
                        x:Name="Glyph"
                        Width="10"
                        Height="11"
                        Data="{StaticResource Checkmark}"
                        Fill="{StaticResource Menu.Static.Foreground}"
                        FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter
                    x:Name="menuHeaderContainer"
                    Grid.Column="2"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock
                    x:Name="menuGestureText"
                    Grid.Column="4"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    VerticalAlignment="Center"
                    Opacity="0.7"
                    Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Background}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource Menu.Disabled.Foreground}" />
                <Setter TargetName="Glyph" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Disabled.Background}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Disabled.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot"
            Height="22"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        MinWidth="22"
                        SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border
                    x:Name="GlyphPanel"
                    Width="22"
                    Height="22"
                    Margin="-1,0,0,0"
                    VerticalAlignment="Center"
                    Background="{StaticResource MenuItem.Highlight.Background}"
                    BorderBrush="{StaticResource MenuItem.Highlight.Border}"
                    BorderThickness="1"
                    Visibility="Hidden">
                    <Path
                        x:Name="Glyph"
                        Width="9"
                        Height="11"
                        Data="{DynamicResource Checkmark}"
                        Fill="{StaticResource Menu.Static.Foreground}"
                        FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter
                    Grid.Column="2"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock
                    Grid.Column="4"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    VerticalAlignment="Center"
                    Opacity="0.7"
                    Text="{TemplateBinding InputGestureText}" />
                <Path
                    x:Name="RightArrow"
                    Grid.Column="5"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Data="{StaticResource RightArrow}"
                    Fill="{StaticResource Menu.Static.Foreground}" />
                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    Focusable="false"
                    HorizontalOffset="-2"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Right"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                    VerticalOffset="-3">
                    <Border
                        x:Name="SubMenuBorder"
                        Padding="2"
                        Background="{StaticResource Menu.Static.Background}"
                        BorderBrush="{StaticResource Menu.Static.Border}"
                        BorderThickness="1">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        Name="OpaqueRect"
                                        Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}"
                                        Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
                                        Fill="{Binding ElementName=SubMenuBorder, Path=Background}" />
                                </Canvas>
                                <Rectangle
                                    Width="1"
                                    Margin="29,2,0,2"
                                    HorizontalAlignment="Left"
                                    Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    Grid.IsSharedSizeScope="true"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="Transparent" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource Menu.Disabled.Foreground}" />
                <Setter TargetName="Glyph" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
                <Setter TargetName="RightArrow" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}" />
                <Setter Property="Padding" Value="6,0" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Background" Value="{StaticResource Menu.Static.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}" />
                <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}" />
                <Setter Property="Padding" Value="6,0" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>




    <JournalEntryUnifiedViewConverter x:Key="JournalEntryUnifiedViewConverter" />

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillEnabled" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#FFFFFF" />
                <GradientStop Offset="0.1" Color="#CCD4E9" />
                <GradientStop Offset="0.47" Color="#4881D2" />
                <GradientStop Offset="0.47" Color="#001A5A" />
                <GradientStop Offset="0.70" Color="#007BD6" />
                <GradientStop Offset="0.85" Color="#54DAFF" />
                <GradientStop Offset="0.95" Color="#86FFFF" />
                <GradientStop Offset="1.0" Color="#FFFFFF" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillHover" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#FFFFFF" />
                <GradientStop Offset="0.1" Color="#DFEDF9" />
                <GradientStop Offset="0.47" Color="#3086E1" />
                <GradientStop Offset="0.47" Color="#003B91" />
                <GradientStop Offset="0.70" Color="#1793EF" />
                <GradientStop Offset="0.85" Color="#5AD4FF" />
                <GradientStop Offset="0.95" Color="#BDFFFF" />
                <GradientStop Offset="1.0" Color="#FFFFFF" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillPressed" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#C0D2F5" />
                <GradientStop Offset="0.47" Color="#5E7A9C" />
                <GradientStop Offset="0.47" Color="#00062D" />
                <GradientStop Offset="0.70" Color="#005F9F" />
                <GradientStop Offset="0.85" Color="#1FA4E2" />
                <GradientStop Offset="0.95" Color="#61DAFF" />
                <GradientStop Offset="1.0" Color="#48CFFF" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillDisabled" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFFFFF" />
                <GradientStop Offset="0.5" Color="#EBEEF5" />
                <GradientStop Offset="0.5" Color="#D8DDEB" />
                <GradientStop Offset="1.0" Color="#DFE2F0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationButtonStrokeEnabled" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#6C90C4" />
                <GradientStop Offset="0.5" Color="#315BB4" />
                <GradientStop Offset="0.5" Color="#002091" />
                <GradientStop Offset="1" Color="#08377C" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationArrowStrokeEnabled" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#8AB1FB" />
            <GradientStop Offset="1" Color="#002874" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationArrowFill" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.5" Color="#FFFFFF" />
                <GradientStop Offset="0.5" Color="#EEEEEE" />
                <GradientStop Offset="1" Color="#B0B0B0" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowDownArrowFill" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#33B5DA" />
                <GradientStop Offset="1" Color="#335799" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NavigationWindowNavigationChromeBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFFFFF" />
            <GradientStop Offset="0.5" Color="#E3E8F4" />
            <GradientStop Offset="0.5" Color="#CFD7EB" />
            <GradientStop Offset="1.0" Color="#E9ECFA" />
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush
        x:Key="CurrentEntryBackground"
        Opacity="0.25"
        Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}" />

    <Style x:Key="NavigationWindowNavigationButtonJournalEntryStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Header" Value="{Binding Path=(JournalEntry.Name)}" />
        <Setter Property="Command" Value="NavigationCommands.NavigateJournal" />
        <Setter Property="CommandTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu}}, Path=TemplatedParent}" />
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
        <Setter Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid
                        Name="Panel"
                        Background="Transparent"
                        SnapsToDevicePixels="true">
                        <Path
                            Name="Glyph"
                            Width="10"
                            Height="10"
                            Margin="7,5"
                            HorizontalAlignment="Left"
                            SnapsToDevicePixels="false"
                            Stroke="{TemplateBinding Foreground}"
                            StrokeEndLineCap="Triangle"
                            StrokeStartLineCap="Triangle"
                            StrokeThickness="2" />
                        <ContentPresenter Margin="24,5,21,5" ContentSource="Header" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Current">
                            <Setter TargetName="Panel" Property="Background" Value="{StaticResource CurrentEntryBackground}" />
                            <Setter TargetName="Glyph" Property="Data" Value="M 0,5 L 2.5,8 L 7,3 " />
                            <Setter TargetName="Glyph" Property="FlowDirection" Value="LeftToRight" />
                            <Setter TargetName="Glyph" Property="StrokeLineJoin" Value="Miter" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter TargetName="Panel" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="MenuItem.IsHighlighted" Value="true" />
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Forward" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Glyph" Property="Stroke" Value="White" />
                            <Setter TargetName="Glyph" Property="Data" Value="M 1,5 L 7,5 M 5,1 L 9,5 L 5,9" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="MenuItem.IsHighlighted" Value="true" />
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Back" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Glyph" Property="Stroke" Value="White" />
                            <Setter TargetName="Glyph" Property="Data" Value="M 9,5 L 3,5 M 5,1 L 1,5 L 5,9" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationWindowMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid>
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="true"
                            Focusable="false"
                            IsOpen="{Binding Path=(MenuItem.IsSubmenuOpen), RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                            VerticalOffset="2">
                            <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                                <Border
                                    Name="SubMenuBorder"
                                    Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                                    BorderThickness="1">

                                    <ScrollViewer Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    Name="OpaqueRect"
                                                    Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}"
                                                    Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
                                                    Fill="{Binding ElementName=SubMenuBorder, Path=Background}" />
                                            </Canvas>
                                            <ItemsPresenter
                                                Name="ItemsPresenter"
                                                Margin="2"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>

                        <Grid
                            x:Name="Panel"
                            Width="26"
                            HorizontalAlignment="Right"
                            Background="Transparent">

                            <Border
                                Name="HighlightBorder"
                                BorderBrush="#B0B5BACE"
                                BorderThickness="1,1,1,1"
                                CornerRadius="2"
                                SnapsToDevicePixels="True"
                                Visibility="Hidden">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#20DDDDDD" />
                                            <GradientStop Offset="1" Color="#80FFFFFF" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border
                                    BorderBrush="#A0FFFFFF"
                                    BorderThickness="1"
                                    CornerRadius="1.5" />
                            </Border>

                            <Path
                                x:Name="Arrow"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 4.5 5 L 9 0 Z"
                                Fill="{StaticResource NavigationWindowDownArrowFill}"
                                SnapsToDevicePixels="false"
                                Stroke="White"
                                StrokeLineJoin="Round"
                                StrokeThickness="1" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="HighlightBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Arrow" Property="Fill" Value="#A5AABE" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="true" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationWindowMenu" TargetType="{x:Type Menu}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="IsMainMenu" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationWindowBackButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Command" Value="NavigationCommands.BrowseBack" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        Width="24"
                        Height="24"
                        Background="Transparent">
                        <Ellipse
                            Name="Circle"
                            Fill="{StaticResource NavigationWindowNavigationButtonFillEnabled}"
                            Stroke="{StaticResource NavigationWindowNavigationButtonStrokeEnabled}"
                            StrokeThickness="1" />

                        <Path
                            Name="Arrow"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M0.37,7.69 L5.74,14.20 A1.5,1.5,0,1,0,10.26,12.27 L8.42,10.42 14.90,10.39 A1.5,1.5,0,1,0,14.92,5.87 L8.44,5.90 10.31,4.03 A1.5,1.5,0,1,0,5.79,1.77 z"
                            Fill="{StaticResource NavigationWindowNavigationArrowFill}"
                            Stroke="{StaticResource NavigationWindowNavigationArrowStrokeEnabled}"
                            StrokeThickness="0.75" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Circle" Property="Fill" Value="{StaticResource NavigationWindowNavigationButtonFillDisabled}" />
                            <Setter TargetName="Circle" Property="Stroke" Value="#B5BACE" />
                            <Setter TargetName="Arrow" Property="Stroke" Value="#B0B5BACE" />
                            <Setter TargetName="Arrow" Property="Fill" Value="#D0FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Circle" Property="Fill" Value="{StaticResource NavigationWindowNavigationButtonFillHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Circle" Property="Fill" Value="{StaticResource NavigationWindowNavigationButtonFillPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="NavigationWindowForwardButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Command" Value="NavigationCommands.BrowseForward" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        Width="24"
                        Height="24"
                        Background="Transparent">
                        <Ellipse
                            Name="Circle"
                            Grid.Column="0"
                            Fill="{StaticResource NavigationWindowNavigationButtonFillEnabled}"
                            Stroke="{StaticResource NavigationWindowNavigationButtonStrokeEnabled}"
                            StrokeThickness="1" />

                        <Path
                            Name="Arrow"
                            Grid.Column="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M0.37,7.69 L5.74,14.20 A1.5,1.5,0,1,0,10.26,12.27 L8.42,10.42 14.90,10.39 A1.5,1.5,0,1,0,14.92,5.87 L8.44,5.90 10.31,4.03 A1.5,1.5,0,1,0,5.79,1.77 z"
                            Fill="{StaticResource NavigationWindowNavigationArrowFill}"
                            RenderTransformOrigin="0.5,0"
                            Stroke="{StaticResource NavigationWindowNavigationArrowStrokeEnabled}"
                            StrokeThickness="0.75">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="-1" />
                            </Path.RenderTransform>
                        </Path>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Circle" Property="Fill" Value="{StaticResource NavigationWindowNavigationButtonFillDisabled}" />
                            <Setter TargetName="Circle" Property="Stroke" Value="#B5BACE" />
                            <Setter TargetName="Arrow" Property="Stroke" Value="#B0B5BACE" />
                            <Setter TargetName="Arrow" Property="Fill" Value="#D0FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Circle" Property="Fill" Value="{StaticResource NavigationWindowNavigationButtonFillHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Circle" Property="Fill" Value="{StaticResource NavigationWindowNavigationButtonFillPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate x:Key="NavigationWindowTemplateKey" TargetType="{x:Type NavigationWindow}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <DockPanel>
                <Grid
                    Name="NavChrome"
                    Height="30"
                    Background="{StaticResource NavigationWindowNavigationChromeBackground}"
                    DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="29" />
                        <ColumnDefinition Width="26" />
                        <ColumnDefinition Width="17" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Menu
                        Name="NavMenu"
                        Grid.ColumnSpan="3"
                        Height="23"
                        Margin="1,0,0,1"
                        VerticalAlignment="Center"
                        Style="{StaticResource NavigationWindowMenu}">

                        <MenuItem
                            Padding="0,2,5,0"
                            IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ItemContainerStyle="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle}"
                            Style="{StaticResource NavigationWindowMenuItem}">
                            <MenuItem.ItemsSource>
                                <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding Path="(NavigationWindow.BackStack)" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(NavigationWindow.ForwardStack)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </MenuItem.ItemsSource>
                        </MenuItem>
                    </Menu>

                    <Path
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Margin="2,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Data="M22.5767,21.035 Q27,19.37 31.424,21.035 A12.5,12.5,0,0,0,53.5,13 A12.5,12.5,0,0,0,37.765,0.926 Q27,4.93 16.235,0.926 A12.5,12.5,0,0,0,0.5,13 A12.5,12.5,0,0,0,22.5767,21.035 z"
                        IsHitTestVisible="false"
                        SnapsToDevicePixels="false"
                        StrokeThickness="1">
                        <Path.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0" Color="#A0C2CCE7" />
                                        <GradientStop Offset="1" Color="#60FFFFFF" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Path.Fill>

                        <Path.Stroke>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0.2" Color="#FFB7C2E3" />
                                        <GradientStop Offset="0.9" Color="#A0FFFFFF" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Path.Stroke>
                    </Path>

                    <Button
                        Grid.Column="0"
                        Margin="3,0,2,0"
                        Style="{StaticResource NavigationWindowBackButtonStyle}" />


                    <Button
                        Grid.Column="1"
                        Margin="2,0,0,0"
                        Style="{StaticResource NavigationWindowForwardButtonStyle}" />
                </Grid>
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter Name="PART_NavWinCP" ClipToBounds="true" />

                    </AdornerDecorator>


                    <ResizeGrip
                        x:Name="WindowResizeGrip"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        IsTabStop="false"
                        Visibility="Collapsed" />
                </Grid>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowsNavigationUI" Value="False">
                <Setter TargetName="NavChrome" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="Window.WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="NavigationWindow.CanGoForward" Value="false" />
                    <Condition Property="NavigationWindow.CanGoBack" Value="false" />
                </MultiTrigger.Conditions>
                <Setter TargetName="NavMenu" Property="IsEnabled" Value="false" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type NavigationWindow}" TargetType="{x:Type NavigationWindow}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template" Value="{StaticResource NavigationWindowTemplateKey}" />
    </Style>






    <Style x:Key="{x:Type Page}" TargetType="{x:Type Page}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Page}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Page.Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025" />
    <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC" />

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}" />
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="PART_Track" />
                        <Grid
                            x:Name="PART_Indicator"
                            HorizontalAlignment="Left"
                            ClipToBounds="true">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                            <Rectangle
                                x:Name="Animation"
                                Fill="{TemplateBinding Foreground}"
                                RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070" />

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="radioButtonBorder"
                            Margin="1,1,2,1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="100">
                            <Grid x:Name="markGrid" Margin="2">
                                <Ellipse
                                    x:Name="optionMark"
                                    MinWidth="6"
                                    MinHeight="6"
                                    Fill="{StaticResource RadioButton.Static.Glyph}"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.MouseOver.Background}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.MouseOver.Border}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.MouseOver.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Disabled.Background}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Disabled.Border}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.Disabled.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Pressed.Background}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Pressed.Border}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.Pressed.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark" Property="Opacity" Value="0.56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <LinearGradientBrush x:Key="ResizeGripperForeground" StartPoint="0,0.25" EndPoint="1,0.75">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.3" Color="#FFFFFF" />
            <GradientStop Offset="0.75" Color="#BBC5D7" />
            <GradientStop Offset="1" Color="#6D83A9" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <Style x:Key="{x:Type ResizeGrip}" TargetType="{x:Type ResizeGrip}">
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ResizeGrip}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Path
                            Margin="0,0,2,2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Data="M 9,0 L 11,0 L 11,11 L 0,11 L 0,9 L 3,9 L 3,6 L 6,6 L 6,3 L 9,3 z">

                            <Path.Fill>
                                <DrawingBrush
                                    TileMode="Tile"
                                    Viewbox="0,0,3,3"
                                    ViewboxUnits="Absolute"
                                    Viewport="0,0,3,3"
                                    ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="{StaticResource ResizeGripperForeground}" Geometry="M 0,0 L 2,0 L 2,2 L 0,2 z " />
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Thumb" Color="#F0F0F0" />

    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        x:Name="border"
                        Background="{StaticResource ScrollBar.Static.Background}"
                        BorderBrush="{StaticResource ScrollBar.Static.Border}"
                        BorderThickness="1"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ScrollBar.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ScrollBar.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ScrollBar.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ScrollBar.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ScrollBar.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ScrollBar.Disabled.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        x:Name="rectangle"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{StaticResource ScrollBar.Static.Thumb}"
                        SnapsToDevicePixels="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        x:Name="rectangle"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{StaticResource ScrollBar.Static.Thumb}"
                        SnapsToDevicePixels="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1,0" />
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Row="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <RepeatButton
                            x:Name="PART_LineUpButton"
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{StaticResource ScrollBarButton}">
                            <Path
                                x:Name="ArrowTop"
                                Margin="3,4,3,3"
                                Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
                                Fill="{StaticResource ScrollBar.Static.Glyph}"
                                Stretch="Uniform" />
                        </RepeatButton>
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="1"
                            IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton
                            x:Name="PART_LineDownButton"
                            Grid.Row="2"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{StaticResource ScrollBarButton}">
                            <Path
                                x:Name="ArrowBottom"
                                Margin="3,4,3,3"
                                Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
                                Fill="{StaticResource ScrollBar.Static.Glyph}"
                                Stretch="Uniform" />
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_LineDownButton, Path=IsMouseOver}" Value="true" />
                                <Condition Binding="{Binding ElementName=PART_LineDownButton, Path=IsPressed}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_LineUpButton, Path=IsMouseOver}" Value="true" />
                                <Condition Binding="{Binding ElementName=PART_LineUpButton, Path=IsPressed}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_LineDownButton, Path=IsMouseOver}" Value="true" />
                                <Condition Binding="{Binding ElementName=PART_LineDownButton, Path=IsPressed}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_LineUpButton, Path=IsMouseOver}" Value="true" />
                                <Condition Binding="{Binding ElementName=PART_LineUpButton, Path=IsPressed}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                            <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <Border
                                    Grid.Column="1"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                <RepeatButton
                                    x:Name="PART_LineLeftButton"
                                    Command="{x:Static ScrollBar.LineLeftCommand}"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Style="{StaticResource ScrollBarButton}">
                                    <Path
                                        x:Name="ArrowLeft"
                                        Margin="3"
                                        Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                        Fill="{StaticResource ScrollBar.Static.Glyph}"
                                        Stretch="Uniform" />
                                </RepeatButton>
                                <Track
                                    x:Name="PART_Track"
                                    Grid.Column="1"
                                    IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton
                                    x:Name="PART_LineRightButton"
                                    Grid.Column="2"
                                    Command="{x:Static ScrollBar.LineRightCommand}"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Style="{StaticResource ScrollBarButton}">
                                    <Path
                                        x:Name="ArrowRight"
                                        Margin="3"
                                        Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                        Fill="{StaticResource ScrollBar.Static.Glyph}"
                                        Stretch="Uniform" />
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=PART_LineRightButton, Path=IsMouseOver}" Value="true" />
                                        <Condition Binding="{Binding ElementName=PART_LineRightButton, Path=IsPressed}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=PART_LineLeftButton, Path=IsMouseOver}" Value="true" />
                                        <Condition Binding="{Binding ElementName=PART_LineLeftButton, Path=IsPressed}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=PART_LineRightButton, Path=IsMouseOver}" Value="true" />
                                        <Condition Binding="{Binding ElementName=PART_LineRightButton, Path=IsPressed}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=PART_LineLeftButton, Path=IsMouseOver}" Value="true" />
                                        <Condition Binding="{Binding ElementName=PART_LineLeftButton, Path=IsPressed}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                    <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle
                            x:Name="Corner"
                            Grid.Row="1"
                            Grid.Column="1"
                            Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="{TemplateBinding Padding}"
                            CanContentScroll="{TemplateBinding CanContentScroll}"
                            CanHorizontallyScroll="False"
                            CanVerticallyScroll="False"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Grid.Column="1"
                            AutomationProperties.AutomationId="VerticalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Grid.Column="0"
                            AutomationProperties.AutomationId="HorizontalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Separator}" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
        <Setter Property="Margin" Value="0,2,0,2" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border
                        Height="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFACACAC" />
    <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC" />
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA" />
    <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC" />
    <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5" />
    <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFE7EAEA" />
    <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFD6D6D6" />

    <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UseLayoutRounding="True">
            <Path
                x:Name="grip"
                VerticalAlignment="Center"
                Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z"
                Fill="{StaticResource SliderThumb.Static.Background}"
                SnapsToDevicePixels="True"
                Stretch="Fill"
                Stroke="{StaticResource SliderThumb.Static.Border}"
                StrokeThickness="1"
                UseLayoutRounding="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UseLayoutRounding="True">
            <Path
                x:Name="grip"
                VerticalAlignment="Center"
                Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z"
                Fill="{StaticResource SliderThumb.Static.Background}"
                SnapsToDevicePixels="True"
                Stretch="Fill"
                Stroke="{StaticResource SliderThumb.Static.Border}"
                StrokeThickness="1"
                UseLayoutRounding="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UseLayoutRounding="True">
            <Path
                x:Name="grip"
                VerticalAlignment="Center"
                Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z"
                Fill="{StaticResource SliderThumb.Static.Background}"
                SnapsToDevicePixels="True"
                Stretch="Fill"
                Stroke="{StaticResource SliderThumb.Static.Border}"
                StrokeThickness="1"
                UseLayoutRounding="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Grid.Row="0"
                    Height="4"
                    Margin="0,0,0,2"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Top"
                    Visibility="Collapsed" />
                <TickBar
                    x:Name="BottomTick"
                    Grid.Row="2"
                    Height="4"
                    Margin="0,2,0,0"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Bottom"
                    Visibility="Collapsed" />
                <Border
                    x:Name="TrackBackground"
                    Grid.Row="1"
                    Height="4.0"
                    Margin="5,0"
                    VerticalAlignment="center"
                    Background="{StaticResource SliderThumb.Track.Background}"
                    BorderBrush="{StaticResource SliderThumb.Track.Border}"
                    BorderThickness="1">
                    <Canvas Margin="-6,-1">
                        <Rectangle
                            x:Name="PART_SelectionRange"
                            Height="4.0"
                            Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                            Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Width="11"
                            Height="18"
                            VerticalAlignment="Center"
                            Focusable="False"
                            OverridesDefaultStyle="True"
                            Template="{StaticResource SliderThumbHorizontalDefault}" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbHorizontalTop}" />
                <Setter TargetName="TrackBackground" Property="Margin" Value="5,2,5,0" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbHorizontalBottom}" />
                <Setter TargetName="TrackBackground" Property="Margin" Value="5,0,5,2" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Thumb" Property="Foreground" Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UseLayoutRounding="True">
            <Path
                x:Name="grip"
                Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z"
                Fill="{StaticResource SliderThumb.Static.Background}"
                Stretch="Fill"
                Stroke="{StaticResource SliderThumb.Static.Border}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UseLayoutRounding="True">
            <Path
                x:Name="grip"
                Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z"
                Fill="{StaticResource SliderThumb.Static.Background}"
                Stretch="Fill"
                Stroke="{StaticResource SliderThumb.Static.Border}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UseLayoutRounding="True">
            <Path
                x:Name="grip"
                Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z"
                Fill="{StaticResource SliderThumb.Static.Background}"
                Stretch="Fill"
                Stroke="{StaticResource SliderThumb.Static.Border}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Grid.Column="0"
                    Width="4"
                    Margin="0,0,2,0"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Left"
                    Visibility="Collapsed" />
                <TickBar
                    x:Name="BottomTick"
                    Grid.Column="2"
                    Width="4"
                    Margin="2,0,0,0"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Right"
                    Visibility="Collapsed" />
                <Border
                    x:Name="TrackBackground"
                    Grid.Column="1"
                    Width="4.0"
                    Margin="0,5"
                    HorizontalAlignment="center"
                    Background="{StaticResource SliderThumb.Track.Background}"
                    BorderBrush="{StaticResource SliderThumb.Track.Border}"
                    BorderThickness="1">
                    <Canvas Margin="-1,-6">
                        <Rectangle
                            x:Name="PART_SelectionRange"
                            Width="4.0"
                            Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                            Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Width="18"
                            Height="11"
                            VerticalAlignment="Top"
                            Focusable="False"
                            OverridesDefaultStyle="True"
                            Template="{StaticResource SliderThumbVerticalDefault}" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbVerticalLeft}" />
                <Setter TargetName="TrackBackground" Property="Margin" Value="2,5,0,5" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbVerticalRight}" />
                <Setter TargetName="TrackBackground" Property="Margin" Value="0,5,2,5" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Thumb" Property="Foreground" Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}" />
        <Setter Property="Template" Value="{StaticResource SliderHorizontal}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource SliderVertical}" />
            </Trigger>
        </Style.Triggers>
    </Style>




    <Style x:Key="{x:Type StatusBar}" TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="#FFF1EDED" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type StatusBarItem}" TargetType="{x:Type StatusBarItem}">
        <Setter Property="Padding" Value="3" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <LinearGradientBrush x:Key="TabItem.Static.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#F0F0F0" />
        <GradientStop Offset="1.0" Color="#E5E5E5" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC" />
    <LinearGradientBrush x:Key="TabItem.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#ECF4FC" />
        <GradientStop Offset="1.0" Color="#DCECFC" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA" />
    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF" />
    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC" />
    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0" />
    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9" />

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        x:Name="templateRoot"
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel
                            x:Name="headerPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="2,2,2,0"
                            Panel.ZIndex="1"
                            Background="Transparent"
                            IsItemsHost="true"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            x:Name="contentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6,2,6,2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Border
                            x:Name="mainBorder"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,1,1,0">
                            <Border
                                x:Name="innerBorder"
                                Margin="-1"
                                Background="{StaticResource TabItem.Selected.Background}"
                                BorderBrush="{StaticResource TabItem.Selected.Border}"
                                BorderThickness="1,1,1,0"
                                Opacity="0" />
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            ContentSource="Header"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,-2,0,-2" />
                            <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,0,-2,-2" />
                            <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="0,-2,-2,-2" />
                            <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,-2,-2,0" />
                            <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />

    <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>



    <Style
        x:Key="{x:Type TextBox}"
        BasedOn="{StaticResource {x:Type TextBoxBase}}"
        TargetType="{x:Type TextBox}" />
    <Style
        x:Key="{x:Type RichTextBox}"
        BasedOn="{StaticResource {x:Type TextBoxBase}}"
        TargetType="{x:Type RichTextBox}">
        <Style.Resources>
            <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
            </Style>
            <Style
                x:Key="{x:Type Hyperlink}"
                BasedOn="{StaticResource {x:Type Hyperlink}}"
                TargetType="{x:Type Hyperlink}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="Blue" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="MinWidth" Value="10" />
    </Style>


    <Style x:Key="{x:Type Thumb}" TargetType="{x:Type Thumb}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Border
                                Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                BorderThickness="0,0,1,1" />
                            <Border
                                Margin="1"
                                Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                                BorderThickness="0,0,1,1" />
                            <Border Margin="2" Background="{TemplateBinding Background}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="ToolTip.Background" Color="#FFF1F2F7" />
    <SolidColorBrush x:Key="ToolTip.Border" Color="#FF767676" />
    <SolidColorBrush x:Key="ToolTip.Foreground" Color="#FF575757" />

    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="Background" Value="{StaticResource ToolTip.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ToolTip.Border}" />
        <Setter Property="Foreground" Value="{StaticResource ToolTip.Foreground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="6,4" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HasDropShadow" Value="False" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border
                        Name="Bd"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer
                            Name="_tv_scrollviewer_"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CanContentScroll="false"
                            Focusable="false"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />




    <PathGeometry x:Key="TreeArrow">
        <PathGeometry.Figures>
            <PathFigureCollection>
                <PathFigure
                    IsClosed="True"
                    IsFilled="True"
                    StartPoint="0 0">
                    <PathFigure.Segments>
                        <PathSegmentCollection>
                            <LineSegment Point="0 6" />
                            <LineSegment Point="6 0" />
                        </PathSegmentCollection>
                    </PathFigure.Segments>
                </PathFigure>
            </PathFigureCollection>
        </PathGeometry.Figures>
    </PathGeometry>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Width="16"
                        Height="16"
                        Padding="5,5,5,5"
                        Background="Transparent">
                        <Path
                            x:Name="ExpandPath"
                            Data="{StaticResource TreeArrow}"
                            Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
                            Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
                            <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
                            <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="19" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton
                            x:Name="Expander"
                            ClickMode="Press"
                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpandCollapseToggleStyle}" />
                        <Border
                            Name="Bd"
                            Grid.Column="1"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="PART_Header"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentSource="Header"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="{x:Type UserControl}" TargetType="{x:Type UserControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserControl}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>

                <ResizeGrip
                    x:Name="WindowResizeGrip"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    IsTabStop="false"
                    Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="Window.WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="{x:Type Window}" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Window.ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <JournalEntryListConverter x:Key="NavigationWindowDropDownLimiter" />

    <Style x:Key="BrowserWindowNavigationButtonJournalEntryStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Header" Value="{Binding Path=Name}" />
        <Setter Property="Command" Value="NavigationCommands.NavigateJournal" />
        <Setter Property="CommandTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}" />
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
    </Style>




    <Style x:Key="BrowserWindowMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <DockPanel x:Name="Panel" Background="Transparent">
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="true"
                            Focusable="false"
                            IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                                <Border
                                    Name="SubMenuBorder"
                                    Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                                    BorderThickness="1">
                                    <ScrollViewer Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    Name="OpaqueRect"
                                                    Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}"
                                                    Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
                                                    Fill="{Binding ElementName=SubMenuBorder, Path=Background}" />
                                            </Canvas>
                                            <ItemsPresenter
                                                Name="ItemsPresenter"
                                                Margin="2"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>
                        <Path
                            x:Name="Arrow"
                            Margin="0,2,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource DownArrow}"
                            Fill="white"
                            Stroke="#AAAAAA"
                            StrokeThickness="1" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                        </Trigger>

                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter TargetName="Panel" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="true" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BrowserWindowMenu" TargetType="{x:Type Menu}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="IsMainMenu" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="NavigationChromeDownLevelBackButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="IsEnabled" Value="false" />
        <Setter Property="Command" Value="NavigationCommands.BrowseBack" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel>
                        <Rectangle
                            x:Name="R1"
                            Width="1"
                            DockPanel.Dock="Right"
                            Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                            Visibility="Hidden" />
                        <Rectangle
                            x:Name="B1"
                            Height="1"
                            DockPanel.Dock="Bottom"
                            Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                            Visibility="Hidden" />
                        <Rectangle
                            x:Name="L1"
                            Width="1"
                            DockPanel.Dock="Left"
                            Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                            Visibility="Hidden" />
                        <Rectangle
                            x:Name="T1"
                            Height="1"
                            DockPanel.Dock="Top"
                            Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                            Visibility="Hidden" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Viewbox Grid.Row="0" Grid.Column="0">
                                <Grid
                                    Width="50"
                                    Height="50"
                                    Margin="15,0,0,0">
                                    <Ellipse
                                        x:Name="EllipseBackground"
                                        Opacity="1"
                                        StrokeThickness="2">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="#B3E2A2" />
                                                        <GradientStop Offset="1" Color="#25B40E" />
                                                    </GradientStopCollection>
                                                </GradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="black" />
                                                        <GradientStop Offset="1" Color="#ccffffff" />
                                                    </GradientStopCollection>
                                                </GradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                    </Ellipse>
                                    <Ellipse
                                        x:Name="EllipseShine"
                                        Margin="5,5,5,15"
                                        Stroke="transparent">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="#aaffffff" />
                                                        <GradientStop Offset="1" Color="transparent" />
                                                    </GradientStopCollection>
                                                </GradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Path
                                        x:Name="Arrow"
                                        Data="M0.5,20.468c0.002,0.34,0.036,0.679,0.102,1.013c0.032,0.162,0.092,0.312,0.139,0.468    c0.052,0.176,0.092,0.355,0.163,0.527c0.076,0.183,0.18,0.349,0.274,0.521c0.073,0.132,0.131,0.27,0.216,0.397    c0.196,0.294,0.418,0.568,0.667,0.817l14.611,14.611c2.083,2.083,5.459,2.083,7.542,0c2.083-2.083,2.083-5.459,0-7.542    l-5.509-5.509h23.791c2.945,0,5.333-2.388,5.333-5.333c0-2.946-2.388-5.333-5.333-5.333H18.732l5.509-5.509    c2.083-2.083,2.083-5.459,0-7.542c-2.083-2.083-5.459-2.083-7.542,0L2.203,16.549c-0.043,0.04-0.095,0.07-0.136,0.111    c-0.002,0.002-0.005,0.003-0.007,0.006c-0.002,0.002-0.003,0.004-0.005,0.006c-0.246,0.247-0.465,0.517-0.659,0.807    c-0.088,0.132-0.149,0.275-0.224,0.413c-0.092,0.167-0.192,0.328-0.266,0.505c-0.072,0.175-0.114,0.357-0.167,0.538    c-0.045,0.153-0.104,0.299-0.135,0.458C0.536,19.732,0.5,20.075,0.5,20.419c0,0.006-0.002,0.012-0.002,0.019    C0.498,20.448,0.5,20.458,0.5,20.468z"
                                        Fill="white"
                                        Stroke="#086403">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                                                        <TranslateTransform X="11.5" Y="10" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Viewbox>
                            <DockPanel Grid.Row="0" Grid.Column="1">
                                <Rectangle
                                    x:Name="R2"
                                    Width="1"
                                    DockPanel.Dock="Right"
                                    Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                    Visibility="Hidden" />
                                <Rectangle
                                    x:Name="B2"
                                    Height="1"
                                    DockPanel.Dock="Bottom"
                                    Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                    Visibility="Hidden" />
                                <Rectangle
                                    x:Name="L2"
                                    Width="1"
                                    DockPanel.Dock="Left"
                                    Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                    Visibility="Hidden" />
                                <Rectangle
                                    x:Name="T2"
                                    Height="1"
                                    DockPanel.Dock="Top"
                                    Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                    Visibility="Hidden" />
                                <Grid Width="10">
                                    <Menu Style="{StaticResource BrowserWindowMenu}">
                                        <MenuItem
                                            x:Name="NavWinMenu"
                                            IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            ItemContainerStyle="{StaticResource BrowserWindowNavigationButtonJournalEntryStyle}"
                                            ItemsSource="{Binding Path=BackStack, Converter={StaticResource NavigationWindowDropDownLimiter}, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}"
                                            Style="{StaticResource BrowserWindowMenuItem}" />
                                    </Menu>
                                </Grid>
                            </DockPanel>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="EllipseBackground" Property="Path.Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="white" />
                                                <GradientStop Offset="1" Color="gray" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="EllipseBackground" Property="Path.Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#25B40E" />
                                                <GradientStop Offset="1" Color="#086403" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="NavWinMenu" Property="Background" Value="Transparent" />
                            <Setter TargetName="L1" Property="Visibility" Value="Visible" />
                            <Setter TargetName="R1" Property="Visibility" Value="Visible" />
                            <Setter TargetName="T1" Property="Visibility" Value="Visible" />
                            <Setter TargetName="B1" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="EllipseBackground" Property="Path.Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#25B40E" />
                                                <GradientStop Offset="1" Color="#086403" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Arrow" Property="Path.RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                                                <TranslateTransform X="10" Y="12" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="EllipseShine" Property="Path.RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="0" Y="2" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
                            <Setter TargetName="L2" Property="Visibility" Value="Visible" />
                            <Setter TargetName="R2" Property="Visibility" Value="Visible" />
                            <Setter TargetName="T2" Property="Visibility" Value="Visible" />
                            <Setter TargetName="B2" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationChromeDownLevelForwardButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="IsEnabled" Value="false" />
        <Setter Property="Command" Value="NavigationCommands.BrowseForward" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel>
                        <Rectangle
                            x:Name="R1"
                            Width="1"
                            DockPanel.Dock="Right"
                            Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                            Visibility="Hidden" />
                        <Rectangle
                            x:Name="B1"
                            Height="1"
                            DockPanel.Dock="Bottom"
                            Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                            Visibility="Hidden" />
                        <Rectangle
                            x:Name="L1"
                            Width="1"
                            DockPanel.Dock="Left"
                            Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                            Visibility="Hidden" />
                        <Rectangle
                            x:Name="T1"
                            Height="1"
                            DockPanel.Dock="Top"
                            Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                            Visibility="Hidden" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Viewbox Grid.Row="0" Grid.Column="0">
                                <Grid
                                    Width="50"
                                    Height="50"
                                    Margin="15,0,0,0">
                                    <Ellipse
                                        x:Name="EllipseBackground"
                                        Opacity="1"
                                        StrokeThickness="2">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="#B3E2A2" />
                                                        <GradientStop Offset="1" Color="#25B40E" />
                                                    </GradientStopCollection>
                                                </GradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="black" />
                                                        <GradientStop Offset="1" Color="#ccffffff" />
                                                    </GradientStopCollection>
                                                </GradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                    </Ellipse>
                                    <Ellipse
                                        x:Name="EllipseShine"
                                        Margin="5,3,5,15"
                                        Stroke="transparent">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="#aaffffff" />
                                                        <GradientStop Offset="1" Color="transparent" />
                                                    </GradientStopCollection>
                                                </GradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Path
                                        x:Name="Arrow"
                                        Data="M47.82,20.407c-0.002-0.34-0.036-0.679-0.102-1.013c-0.032-0.162-0.092-0.312-0.139-0.468    c-0.052-0.176-0.092-0.355-0.163-0.527c-0.076-0.183-0.18-0.349-0.274-0.521c-0.073-0.132-0.131-0.27-0.216-0.397    c-0.196-0.294-0.418-0.568-0.667-0.817L31.647,2.053c-2.083-2.083-5.459-2.083-7.542,0c-2.083,2.083-2.083,5.459,0,7.542    l5.509,5.509H5.823c-2.945,0-5.333,2.388-5.333,5.333c0,2.946,2.388,5.333,5.333,5.333h23.765l-5.509,5.509    c-2.083,2.083-2.083,5.459,0,7.542c2.083,2.083,5.459,2.083,7.542,0l14.497-14.497c0.043-0.04,0.095-0.07,0.136-0.111    c0.002-0.002,0.005-0.003,0.007-0.006c0.002-0.002,0.003-0.004,0.005-0.006c0.246-0.247,0.465-0.517,0.659-0.807    c0.088-0.132,0.149-0.275,0.224-0.413c0.092-0.167,0.192-0.328,0.266-0.505c0.072-0.175,0.114-0.357,0.167-0.538    c0.045-0.153,0.104-0.299,0.135-0.458c0.067-0.339,0.103-0.682,0.104-1.026c0-0.006,0.002-0.012,0.002-0.019    C47.823,20.427,47.82,20.417,47.82,20.407z"
                                        Fill="white"
                                        Stroke="#086403">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                                                        <TranslateTransform X="8.5" Y="10" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Viewbox>
                            <DockPanel Grid.Row="0" Grid.Column="1">
                                <Rectangle
                                    x:Name="R2"
                                    Width="1"
                                    DockPanel.Dock="Right"
                                    Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                    Visibility="Hidden" />
                                <Rectangle
                                    x:Name="B2"
                                    Height="1"
                                    DockPanel.Dock="Bottom"
                                    Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                    Visibility="Hidden" />
                                <Rectangle
                                    x:Name="L2"
                                    Width="1"
                                    DockPanel.Dock="Left"
                                    Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                    Visibility="Hidden" />
                                <Rectangle
                                    x:Name="T2"
                                    Height="1"
                                    DockPanel.Dock="Top"
                                    Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                    Visibility="Hidden" />
                                <Grid Width="10">
                                    <Menu Style="{StaticResource BrowserWindowMenu}">
                                        <MenuItem
                                            x:Name="NavWinMenu"
                                            IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            ItemContainerStyle="{StaticResource BrowserWindowNavigationButtonJournalEntryStyle}"
                                            ItemsSource="{Binding Path=ForwardStack, Converter={StaticResource NavigationWindowDropDownLimiter}, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}"
                                            Style="{StaticResource BrowserWindowMenuItem}" />
                                    </Menu>
                                </Grid>
                            </DockPanel>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="EllipseBackground" Property="Path.Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="white" />
                                                <GradientStop Offset="1" Color="gray" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="EllipseBackground" Property="Path.Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#25B40E" />
                                                <GradientStop Offset="1" Color="#086403" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="NavWinMenu" Property="Background" Value="Transparent" />
                            <Setter TargetName="L1" Property="Visibility" Value="Visible" />
                            <Setter TargetName="R1" Property="Visibility" Value="Visible" />
                            <Setter TargetName="T1" Property="Visibility" Value="Visible" />
                            <Setter TargetName="B1" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="EllipseBackground" Property="Path.Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#25B40E" />
                                                <GradientStop Offset="1" Color="#086403" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Arrow" Property="Path.RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                                                <TranslateTransform X="10" Y="12" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="EllipseShine" Property="Path.RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="0" Y="2" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
                            <Setter TargetName="L2" Property="Visibility" Value="Visible" />
                            <Setter TargetName="R2" Property="Visibility" Value="Visible" />
                            <Setter TargetName="T2" Property="Visibility" Value="Visible" />
                            <Setter TargetName="B2" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="BrowserHostWindowTemplateKey" TargetType="{x:Type NavigationWindow}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <AdornerDecorator>
                <ContentPresenter Name="PART_NavWinCP" ClipToBounds="true" />
            </AdornerDecorator>
        </Border>
    </ControlTemplate>
    <Style x:Key="{x:Static SystemParameters.NavigationChromeStyleKey}" TargetType="{x:Type NavigationWindow}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template" Value="{StaticResource BrowserHostWindowTemplateKey}" />
    </Style>
    <ControlTemplate x:Key="BrowserHostDownLevelWindowTemplateKey" TargetType="{x:Type NavigationWindow}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <DockPanel>
                <Grid
                    Height="30"
                    DockPanel.Dock="Top"
                    FlowDirection="{x:Static theme:PlatformCulture.FlowDirection}">
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Offset="0" Color="silver" />
                                    <GradientStop Offset="1" Color="white" />
                                </GradientStopCollection>
                            </GradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <DockPanel LastChildFill="false">
                        <Button
                            Width="40"
                            Button.IsEnabled="{TemplateBinding NavigationWindow.CanGoBack}"
                            DockPanel.Dock="left"
                            Style="{StaticResource NavigationChromeDownLevelBackButtonStyle}" />
                        <Button
                            Width="40"
                            Button.IsEnabled="{TemplateBinding NavigationWindow.CanGoForward}"
                            DockPanel.Dock="left"
                            Style="{StaticResource NavigationChromeDownLevelForwardButtonStyle}" />
                    </DockPanel>
                </Grid>
                <Border>
                    <AdornerDecorator>
                        <ContentPresenter Name="PART_NavWinCP" ClipToBounds="true" />
                    </AdornerDecorator>
                </Border>
            </DockPanel>
        </Border>
    </ControlTemplate>
    <Style x:Key="{x:Static SystemParameters.NavigationChromeDownLevelStyleKey}" TargetType="{x:Type NavigationWindow}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template" Value="{StaticResource BrowserHostDownLevelWindowTemplateKey}" />
        <Style.Triggers>
            <Trigger Property="NavigationWindow.ShowsNavigationUI" Value="false">
                <Setter Property="Template" Value="{StaticResource BrowserHostWindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />

    <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="{x:Type ToggleButton}"
        BasedOn="{StaticResource BaseButtonStyle}"
        TargetType="{x:Type ToggleButton}" />

    <Style
        x:Key="{x:Type RepeatButton}"
        BasedOn="{StaticResource BaseButtonStyle}"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
    </Style>

    <Style
        x:Key="{x:Type Button}"
        BasedOn="{StaticResource BaseButtonStyle}"
        TargetType="{x:Type Button}" />




    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />


    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="checkBoxBorder"
                            Margin="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid x:Name="markGrid">
                                <Path
                                    x:Name="optionMark"
                                    Margin="1"
                                    Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                    Fill="{StaticResource OptionMark.Static.Glyph}"
                                    Opacity="0"
                                    Stretch="None" />
                                <Rectangle
                                    x:Name="indeterminateMark"
                                    Margin="2"
                                    Fill="{StaticResource OptionMark.Static.Glyph}"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.MouseOver.Border}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                            <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                            <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Pressed.Background}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Pressed.Border}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                            <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="4,4,21,4"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Background="Transparent"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <LinearGradientBrush x:Key="ComboBox.Static.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#FFF0F0F0" />
        <GradientStop Offset="1.0" Color="#FFE5E5E5" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC" />
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />

    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#FFECF4FC" />
        <GradientStop Offset="1.0" Color="#FFDCECFC" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#FFEBF4FC" />
        <GradientStop Offset="1.0" Color="#FFDCECFC" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA" />

    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#FFDAECFC" />
        <GradientStop Offset="1.0" Color="#FFC4E0FC" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#FFDAEBFC" />
        <GradientStop Offset="1.0" Color="#FFC4E0FC" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5" />

    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />


    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="templateRoot"
                        Background="{StaticResource ComboBox.Static.Background}"
                        BorderBrush="{StaticResource ComboBox.Static.Border}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Border
                            x:Name="splitBorder"
                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                            Margin="0"
                            HorizontalAlignment="Right"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            SnapsToDevicePixels="true">
                            <Path
                                x:Name="arrow"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                Fill="{StaticResource ComboBox.Static.Glyph}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Background}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Border}" />
                            <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Background}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                            <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Pressed.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                            <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Disabled.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Background}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                            <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome
                    x:Name="shadow"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Color="Transparent">
                    <Border
                        x:Name="dropDownBorder"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                        BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButton}" />
            <Border
                x:Name="border"
                Margin="{TemplateBinding BorderThickness}"
                Background="{StaticResource TextBox.Static.Background}">
                <TextBox
                    x:Name="PART_EditableTextBox"
                    Margin="{TemplateBinding Padding}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxEditableTextBox}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Opacity" Value="0.56" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                <Setter TargetName="shadow" Property="Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                Margin="1"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome
                    x:Name="shadow"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Color="Transparent">
                    <Border
                        x:Name="dropDownBorder"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                        BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="false"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                <Setter TargetName="shadow" Property="Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F26A0DA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A826A0DA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3D26A0DA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF26A0DA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#2E0080FF" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#99006CD9" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#5426A0DA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF26A0DA" />


    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="UIElement.IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="UIElement.IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="FrameNavChromeTemplateKey" TargetType="{x:Type Frame}">
        <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <DockPanel>
                <Grid
                    Height="22"
                    Background="{StaticResource NavigationWindowNavigationChromeBackground}"
                    DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="16" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Menu
                        Name="NavMenu"
                        Grid.ColumnSpan="3"
                        Height="16"
                        Margin="1,0,0,0"
                        VerticalAlignment="Center"
                        Style="{StaticResource NavigationWindowMenu}">

                        <MenuItem
                            Padding="0,2,4,0"
                            IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ItemContainerStyle="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle}"
                            Style="{StaticResource NavigationWindowMenuItem}">
                            <MenuItem.ItemsSource>
                                <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding Path="BackStack" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="ForwardStack" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </MenuItem.ItemsSource>
                        </MenuItem>
                    </Menu>

                    <Path
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Margin="2,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Data="M22.5767,21.035 Q27,19.37 31.424,21.035 A12.5,12.5,0,0,0,53.5,13 A12.5,12.5,0,0,0,37.765,0.926 Q27,4.93 16.235,0.926 A12.5,12.5,0,0,0,0.5,13 A12.5,12.5,0,0,0,22.5767,21.035 z"
                        IsHitTestVisible="false"
                        SnapsToDevicePixels="false"
                        StrokeThickness="1">
                        <Path.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0" Color="#A0C2CCE7" />
                                        <GradientStop Offset="1" Color="#60FFFFFF" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Path.Fill>

                        <Path.Stroke>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0.2" Color="#FFB7C2E3" />
                                        <GradientStop Offset="0.9" Color="#A0FFFFFF" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Path.Stroke>
                        <Path.LayoutTransform>
                            <ScaleTransform ScaleX="0.667" ScaleY="0.667" />
                        </Path.LayoutTransform>
                    </Path>

                    <Button
                        Grid.Column="0"
                        Margin="3,0,1,0"
                        Style="{StaticResource NavigationWindowBackButtonStyle}">
                        <Button.LayoutTransform>
                            <ScaleTransform ScaleX="0.667" ScaleY="0.667" />
                        </Button.LayoutTransform>
                    </Button>


                    <Button
                        Grid.Column="1"
                        Margin="1,0,0,0"
                        Style="{StaticResource NavigationWindowForwardButtonStyle}">
                        <Button.LayoutTransform>
                            <ScaleTransform ScaleX="0.667" ScaleY="0.667" />
                        </Button.LayoutTransform>
                    </Button>
                </Grid>
                <ContentPresenter x:Name="PART_FrameCP" />
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CanGoForward" Value="false" />
                    <Condition Property="CanGoBack" Value="false" />
                </MultiTrigger.Conditions>
                <Setter TargetName="NavMenu" Property="IsEnabled" Value="false" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type Frame}" TargetType="{x:Type Frame}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Frame}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="PART_FrameCP" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="NavigationUIVisibility" Value="Visible">
                <Setter Property="Template" Value="{StaticResource FrameNavChromeTemplateKey}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="JournalOwnership" Value="OwnsJournal" />
                    <Condition Property="NavigationUIVisibility" Value="Automatic" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource FrameNavChromeTemplateKey}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <SolidColorBrush x:Key="ToolBarDarkFill" Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarDisabledFill" Color="#FFDADADA" />
    <SolidColorBrush x:Key="ToolBarDisabledBorder" Color="#FFDADADA" />
    <SolidColorBrush x:Key="ToolBarSeparatorFill" Color="#FFB6BDC5" />
    <SolidColorBrush x:Key="ToolBarButtonHover" Color="#210080FF" />
    <SolidColorBrush x:Key="ToolBarButtonHoverBorder" Color="#80DADADA" />
    <SolidColorBrush x:Key="ToolBarButtonChecked" Color="#400080FF" />
    <SolidColorBrush x:Key="ToolBarButtonPressed" Color="#400080FF" />
    <SolidColorBrush x:Key="ToolBarButtonPressedBorder" Color="#90006CD9" />
    <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFB6BDC5" />
    <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarMenuCheckFill" Color="#FF212121" />
    <SolidColorBrush x:Key="ToolBarOpenHeaderBackground" Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarTrayBackground" Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarHorizontalBackground" Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarVerticalBackground" Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarGripper" Color="#FF6D6D6D" />
    <SolidColorBrush x:Key="ToolBarToggleButtonHorizontalBackground" Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="ToolBarToggleButtonVerticalBackground" Color="#FFEEF5FD" />


    <Geometry x:Key="ToolBarCheckmark">M 0,2.5 L 2.5,5 L 7,0.5</Geometry>

    <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="CornerRadius" Value="0,0,0,0" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="0,0,11,0" />
        <Setter Property="CornerRadius" Value="3,3,3,3" />
    </Style>

    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{StaticResource ToolBarSeparatorFill}" />
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Margin" Value="2,2,2,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}" />
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                            <Setter Property="Background" Value="{StaticResource ToolBarButtonChecked}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                            <Setter Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                            <Setter Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsChecked" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}" />
                            <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="true" />
                                <Condition Property="IsChecked" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}" />
                            <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}" />
                            <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
        BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
        TargetType="{x:Type CheckBox}" />
    <Style
        x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
        BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
        TargetType="{x:Type RadioButton}" />


    <Style x:Key="ToolBarComboBoxTransparentButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="Chrome"
                            Grid.Column="1"
                            Width="13"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <Path
                                x:Name="ArrowDownPath"
                                VerticalAlignment="Center"
                                Data="M 2.5 0 L 8.5 0 L 5.5 3 Z"
                                Fill="black" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{x:Null}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsChecked" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ToolBarButtonPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ArrowDownPath" Property="Fill" Value="{StaticResource ToolBarDisabledBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="1,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid Grid.IsSharedSizeScope="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
                            </Grid.ColumnDefinitions>
                            <Border Name="Background" Background="{TemplateBinding Background}" />
                            <Border Name="SelectedContentBorder" Margin="2,2,1,2">
                                <ContentPresenter
                                    x:Name="ContentSite"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <Border
                                Name="Border"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            <ToggleButton
                                x:Name="DropDownButton"
                                Grid.ColumnSpan="2"
                                BorderBrush="white"
                                BorderThickness="1"
                                IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ToolBarComboBoxTransparentButtonStyle}" />
                            <TextBox
                                x:Name="PART_EditableTextBox"
                                MinHeight="18"
                                Margin="1,1,0,1"
                                Padding="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ComboBoxEditableTextBox}"
                                Visibility="Collapsed" />
                        </Grid>
                        <Popup
                            Name="PART_Popup"
                            AllowsTransparency="true"
                            Focusable="false"
                            IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome
                                Name="Shdw"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Color="Transparent">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{StaticResource ToolBarMenuBorder}"
                                    BorderThickness="1">
                                    <ScrollViewer Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    Name="OpaqueRect"
                                                    Width="{Binding ElementName=DropDownBorder, Path=ActualWidth}"
                                                    Height="{Binding ElementName=DropDownBorder, Path=ActualHeight}"
                                                    Fill="{Binding ElementName=DropDownBorder, Path=Background}" />
                                            </Canvas>
                                            <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter TargetName="Background" Property="Background" Value="{StaticResource ToolBarDisabledFill}" />
                            <Setter TargetName="Background" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ToolBarDisabledBorder}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="true" />
                                <Condition Property="IsDropDownOpen" Value="false" />
                                <Condition Property="IsEditable" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SelectedContentBorder" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter TargetName="DropDownButton" Property="Background" Value="{x:Null}" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="DropDownButton" Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                            <Setter TargetName="DropDownButton" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="true">
                            <Setter TargetName="DropDownButton" Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                            <Setter TargetName="DropDownButton" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="true" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="true" />
                                <Condition Property="IsDropDownOpen" Value="false" />
                                <Condition Property="IsEditable" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="Padding" Value="2" />
                            <Setter Property="IsTabStop" Value="false" />
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="1,0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            MinHeight="18"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ToolBarDisabledFill}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ToolBarDisabledBorder}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Static ToolBar.MenuStyleKey}" TargetType="{x:Type Menu}">
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="{StaticResource ToolBarSeparatorFill}" />
                <Setter Property="Height" Value="1" />
                <Setter Property="Margin" Value="0,1,0,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        Width="Auto"
                                        MinWidth="24"
                                        SharedSizeGroup="MenuItemIconColumnGroup" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border
                                    Grid.Column="1"
                                    Margin="8,0,0,0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Margin" Value="0,1,0,0" />
                <Setter Property="Padding" Value="8,3,8,3" />
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid Background="Transparent" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        Width="Auto"
                                        MinWidth="24"
                                        SharedSizeGroup="MenuItemIconColumnGroup" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                    <ColumnDefinition Width="14" />
                                </Grid.ColumnDefinitions>
                                <Border
                                    Name="Border"
                                    Grid.ColumnSpan="4"
                                    Margin="1,0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                <ContentPresenter
                                    x:Name="Icon"
                                    Margin="0"
                                    VerticalAlignment="Center"
                                    ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Border
                                    Name="GlyphPanel"
                                    Width="20"
                                    Height="20"
                                    Margin="0,1"
                                    Background="{StaticResource ToolBarMenuCheckFill}"
                                    BorderBrush="{StaticResource ToolBarButtonHoverBorder}"
                                    BorderThickness="1"
                                    Visibility="Hidden">
                                    <Path
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{StaticResource ToolBarCheckmark}"
                                        FlowDirection="LeftToRight"
                                        Stroke="{TemplateBinding Foreground}"
                                        StrokeThickness="1.2" />
                                </Border>

                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <TextBlock
                                    Grid.Column="2"
                                    Margin="4,3,2,3"
                                    HorizontalAlignment="Right"
                                    Text="{TemplateBinding InputGestureText}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                                    <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}" />
                                    <Setter TargetName="GlyphPanel" Property="Background" Value="{StaticResource ToolBarDarkFill}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Padding" Value="6,2,7,2" />
                        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border
                                        Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1"
                                        SnapsToDevicePixels="true">
                                        <DockPanel Name="Header">
                                            <ContentPresenter
                                                x:Name="Icon"
                                                Margin="4,0,6,0"
                                                VerticalAlignment="Center"
                                                ContentSource="Icon"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            <Path
                                                x:Name="GlyphPanel"
                                                Margin="4,0,6,0"
                                                VerticalAlignment="Center"
                                                Data="{StaticResource ToolBarCheckmark}"
                                                FlowDirection="LeftToRight"
                                                Stroke="{TemplateBinding Foreground}"
                                                StrokeThickness="1.2"
                                                Visibility="Collapsed" />
                                            <ContentPresenter
                                                Margin="{TemplateBinding Padding}"
                                                ContentSource="Header"
                                                RecognizesAccessKey="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            <Popup
                                                x:Name="PART_Popup"
                                                AllowsTransparency="true"
                                                Focusable="false"
                                                HorizontalOffset="-1"
                                                IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                Placement="Bottom"
                                                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                                <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                                                    <Border
                                                        Name="SubMenuBorder"
                                                        Background="{StaticResource ToolBarSubMenuBackground}"
                                                        BorderBrush="{StaticResource ToolBarMenuBorder}"
                                                        BorderThickness="1">
                                                        <Grid>
                                                            <Rectangle
                                                                Width="{Binding ElementName=Header, Path=ActualWidth}"
                                                                Height="1"
                                                                Margin="0,-1,0,0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top"
                                                                Fill="{StaticResource ToolBarSubMenuBackground}" />
                                                            <ScrollViewer Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                                                <Grid Grid.IsSharedSizeScope="true" RenderOptions.ClearTypeHint="Enabled">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition
                                                                            Width="Auto"
                                                                            MinWidth="24"
                                                                            SharedSizeGroup="MenuItemIconColumnGroup" />
                                                                        <ColumnDefinition Width="*" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Canvas
                                                                        Width="0"
                                                                        Height="0"
                                                                        HorizontalAlignment="Left"
                                                                        VerticalAlignment="Top">
                                                                        <Rectangle
                                                                            Name="OpaqueRect"
                                                                            Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}"
                                                                            Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
                                                                            Fill="{Binding ElementName=SubMenuBorder, Path=Background}" />
                                                                    </Canvas>
                                                                    <Rectangle Margin="0,1" Fill="{StaticResource ToolBarVerticalBackground}" />
                                                                    <ItemsPresenter
                                                                        Name="ItemsPresenter"
                                                                        Grid.ColumnSpan="2"
                                                                        Margin="0,0,0,1"
                                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                </Grid>
                                                            </ScrollViewer>
                                                        </Grid>
                                                    </Border>
                                                </theme:SystemDropShadowChrome>
                                            </Popup>
                                        </DockPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                                        </Trigger>
                                        <Trigger Property="Icon" Value="{x:Null}">
                                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                                        </Trigger>
                                        <Trigger Property="IsSubmenuOpen" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ToolBarMenuBorder}" />
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ToolBarOpenHeaderBackground}" />
                                        </Trigger>
                                        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                                            <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="true" />
                                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>
                                        <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Margin" Value="0,1,0,1" />
                        <Setter Property="Padding" Value="7,1,8,2" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border
                                        Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1"
                                        SnapsToDevicePixels="true">
                                        <DockPanel>
                                            <ContentPresenter
                                                x:Name="Icon"
                                                Margin="4,0,6,0"
                                                VerticalAlignment="Center"
                                                ContentSource="Icon"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            <Path
                                                x:Name="GlyphPanel"
                                                Margin="4,0,6,0"
                                                VerticalAlignment="Center"
                                                Data="{StaticResource ToolBarCheckmark}"
                                                FlowDirection="LeftToRight"
                                                Stroke="{TemplateBinding Foreground}"
                                                StrokeThickness="1.2"
                                                Visibility="Collapsed" />
                                            <ContentPresenter
                                                Margin="{TemplateBinding Padding}"
                                                ContentSource="Header"
                                                RecognizesAccessKey="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </DockPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Icon" Value="{x:Null}">
                                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="DockPanel.Dock" Value="Top" />
                        <Setter Property="Padding" Value="8,3,8,3" />
                        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Grid Background="Transparent" SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition
                                                Width="Auto"
                                                MinWidth="24"
                                                SharedSizeGroup="MenuItemIconColumnGroup" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                            <ColumnDefinition Width="14" />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            Name="Border"
                                            Grid.ColumnSpan="4"
                                            Margin="1,0"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                        <ContentPresenter
                                            x:Name="Icon"
                                            Margin="3"
                                            VerticalAlignment="Center"
                                            ContentSource="Icon"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <Border
                                            Name="GlyphPanel"
                                            Width="20"
                                            Height="20"
                                            Margin="0,1"
                                            Background="{StaticResource ToolBarMenuCheckFill}"
                                            BorderBrush="{StaticResource ToolBarButtonHoverBorder}"
                                            BorderThickness="1"
                                            Visibility="Hidden">
                                            <Path
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Data="{StaticResource ToolBarCheckmark}"
                                                FlowDirection="LeftToRight"
                                                Stroke="{TemplateBinding Foreground}"
                                                StrokeThickness="1.2" />
                                        </Border>
                                        <ContentPresenter
                                            Grid.Column="1"
                                            Margin="{TemplateBinding Padding}"
                                            ContentSource="Header"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <Path
                                            Grid.Column="3"
                                            Margin="4,0,6,0"
                                            VerticalAlignment="Center"
                                            Data="{StaticResource RightArrow}"
                                            DockPanel.Dock="Right"
                                            Fill="{TemplateBinding Foreground}" />
                                        <Popup
                                            x:Name="PART_Popup"
                                            AllowsTransparency="true"
                                            Focusable="false"
                                            IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                            Placement="Right"
                                            PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                            <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                                                <Border
                                                    Name="SubMenuBorder"
                                                    Background="{StaticResource ToolBarSubMenuBackground}"
                                                    BorderBrush="{StaticResource ToolBarMenuBorder}"
                                                    BorderThickness="1"
                                                    Grid.IsSharedSizeScope="true">
                                                    <ScrollViewer Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition
                                                                    Width="Auto"
                                                                    MinWidth="24"
                                                                    SharedSizeGroup="MenuItemIconColumnGroup" />
                                                                <ColumnDefinition Width="*" />
                                                            </Grid.ColumnDefinitions>
                                                            <Canvas
                                                                Width="0"
                                                                Height="0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top">
                                                                <Rectangle
                                                                    Name="OpaqueRect"
                                                                    Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}"
                                                                    Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
                                                                    Fill="{Binding ElementName=SubMenuBorder, Path=Background}" />
                                                            </Canvas>
                                                            <Rectangle Margin="0,1" Fill="{StaticResource ToolBarVerticalBackground}" />
                                                            <ItemsPresenter
                                                                Name="ItemsPresenter"
                                                                Grid.ColumnSpan="2"
                                                                Margin="0,0,0,1"
                                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                KeyboardNavigation.TabNavigation="Cycle"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Grid>
                                                    </ScrollViewer>
                                                </Border>
                                            </theme:SystemDropShadowChrome>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                                        </Trigger>
                                        <Trigger Property="Icon" Value="{x:Null}">
                                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}" />
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                                            <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}" />
                                            <Setter TargetName="GlyphPanel" Property="Background" Value="{StaticResource ToolBarDarkFill}" />
                                        </Trigger>
                                        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                                            <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="true" />
                                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>
                                        <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>



    <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush
                                    TileMode="Tile"
                                    Viewbox="0,0,4,4"
                                    ViewboxUnits="Absolute"
                                    Viewport="0,0,4,4"
                                    ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z" />
                                                <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z" />
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeAll" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Name="Bd"
                        Background="{TemplateBinding Background}"
                        CornerRadius="0,3,3,0"
                        SnapsToDevicePixels="true">
                        <Canvas
                            Width="6"
                            Height="7"
                            Margin="7,2,2,2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            SnapsToDevicePixels="true">
                            <Path Data="M 1 1.5 L 6 1.5" Stroke="White" />
                            <Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}" />
                            <Path Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" Fill="White" />
                            <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Name="Bd"
                        Background="{TemplateBinding Background}"
                        CornerRadius="0,0,3,3"
                        SnapsToDevicePixels="true">
                        <Canvas
                            Width="7"
                            Height="6"
                            Margin="2,7,2,2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            SnapsToDevicePixels="true">
                            <Path Data="M 1.5 1 L 1.5 6" Stroke="White" />
                            <Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}" />
                            <Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="White" />
                            <Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid
                        Name="Grid"
                        Margin="3,1,1,1"
                        SnapsToDevicePixels="true">
                        <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                            <ToggleButton
                                x:Name="OverflowButton"
                                ClickMode="Press"
                                FocusVisualStyle="{x:Null}"
                                IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                IsEnabled="{TemplateBinding HasOverflowItems}"
                                Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" />
                            <Popup
                                x:Name="OverflowPopup"
                                AllowsTransparency="true"
                                Focusable="false"
                                IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Bottom"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                StaysOpen="false">
                                <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                                    <Border
                                        x:Name="ToolBarSubMenuBorder"
                                        Background="{StaticResource ToolBarSubMenuBackground}"
                                        BorderBrush="{StaticResource ToolBarMenuBorder}"
                                        BorderThickness="1"
                                        RenderOptions.ClearTypeHint="Enabled">
                                        <ToolBarOverflowPanel
                                            x:Name="PART_ToolBarOverflowPanel"
                                            Margin="2"
                                            FocusVisualStyle="{x:Null}"
                                            Focusable="true"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            WrapWidth="200" />
                                    </Border>
                                </theme:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                        <Border
                            x:Name="MainPanelBorder"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Style="{StaticResource ToolBarMainPanelBorderStyle}">
                            <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                <Thumb
                                    x:Name="ToolBarThumb"
                                    Width="10"
                                    Margin="-3,-1,0,0"
                                    Padding="6,5,1,6"
                                    Style="{StaticResource ToolBarThumbStyle}" />
                                <ContentPresenter
                                    x:Name="ToolBarHeader"
                                    Margin="4,0,4,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ContentSource="Header"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <ToolBarPanel
                                    x:Name="PART_ToolBarPanel"
                                    Margin="0,1,2,2"
                                    IsItemsHost="true"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false" />
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter TargetName="ToolBarHeader" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="OverflowPopup" Property="Popup.HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="true" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Grid" Property="Margin" Value="1,3,1,1" />
                            <Setter TargetName="OverflowButton" Property="Style" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
                            <Setter TargetName="ToolBarThumb" Property="Height" Value="10" />
                            <Setter TargetName="ToolBarThumb" Property="Width" Value="Auto" />
                            <Setter TargetName="ToolBarThumb" Property="Margin" Value="-1,-3,0,0" />
                            <Setter TargetName="ToolBarThumb" Property="Padding" Value="5,6,6,1" />
                            <Setter TargetName="ToolBarHeader" Property="Margin" Value="0,0,0,4" />
                            <Setter TargetName="PART_ToolBarPanel" Property="Margin" Value="1,0,2,2" />
                            <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="OverflowGrid" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="OverflowGrid" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="OverflowPopup" Property="Placement" Value="Right" />
                            <Setter TargetName="MainPanelBorder" Property="Margin" Value="0,0,0,11" />
                            <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="{StaticResource ToolBarTrayBackground}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
